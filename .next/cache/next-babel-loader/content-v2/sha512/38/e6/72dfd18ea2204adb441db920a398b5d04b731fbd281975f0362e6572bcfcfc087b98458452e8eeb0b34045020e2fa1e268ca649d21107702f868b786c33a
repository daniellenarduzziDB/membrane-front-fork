{"ast":null,"code":"import { request } from '../config/axios';\nimport Utils from '../lib/utils'; //Sign In\n\nvar login = function login(payload) {\n  return request.post('v2/login', payload).then(function (response) {\n    var _response$data = response.data,\n        error = _response$data.error,\n        data = _response$data.data;\n\n    if (error) {\n      throw new Error(Utils.parseApiError(error));\n    } else return data;\n  });\n};\n\nvar loginTwoFactor = function loginTwoFactor(payload) {\n  return request.post('v2/two-steps-auth/verify', payload).then(function (response) {\n    var _response$data2 = response.data,\n        error = _response$data2.error,\n        data = _response$data2.data;\n\n    if (error) {\n      throw new Error(Utils.parseApiError(error));\n    } else return data;\n  });\n}; //Sign Up\n\n\nvar generateAccount = function generateAccount(payload) {\n  return request.post('v2/accounts', payload).then(function (response) {\n    var _response$data3 = response.data,\n        error = _response$data3.error,\n        data = _response$data3.data;\n\n    if (error) {\n      throw new Error(Utils.parseApiError(error));\n    } else return data;\n  });\n};\n\nvar activateAccount = function activateAccount(payload) {\n  return request.post('v2/accounts/me/activate', payload).then(function (response) {\n    var _response$data4 = response.data,\n        error = _response$data4.error,\n        data = _response$data4.data;\n\n    if (error) {\n      throw new Error(Utils.parseApiError(error));\n    } else return data;\n  });\n}; //Global\n\n\nvar requestNewCode = function requestNewCode() {\n  return request.post('v2/two-steps-auth/generate').then(function (response) {\n    var _response$data5 = response.data,\n        error = _response$data5.error,\n        data = _response$data5.data;\n\n    if (error) {\n      throw new Error(Utils.parseApiError(error));\n    } else return data;\n  });\n};\n\nvar isLoggedIn = function isLoggedIn() {\n  var token = sessionStorage.getItem('auth-token');\n  return !!token;\n};\n\nexport { login, loginTwoFactor, generateAccount, activateAccount, requestNewCode, isLoggedIn };","map":{"version":3,"sources":["/home/juanma/projects/membrane-front/src/legacy/services/auth.js"],"names":["request","Utils","login","payload","post","then","response","data","error","Error","parseApiError","loginTwoFactor","generateAccount","activateAccount","requestNewCode","isLoggedIn","token","sessionStorage","getItem"],"mappings":"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","sourcesContent":["import { request } from '../config/axios';\nimport Utils from '../lib/utils';\n\n//Sign In\nconst login = payload => {\n  return request.post('v2/login', payload).then(response => {\n    const { error, data } = response.data;\n    if (error) {\n      throw new Error(Utils.parseApiError(error));\n    } else return data;\n  });\n};\n\nconst loginTwoFactor = payload => {\n  return request.post('v2/two-steps-auth/verify', payload).then(response => {\n    const { error, data } = response.data;\n    if (error) {\n      throw new Error(Utils.parseApiError(error));\n    } else return data;\n  });\n};\n\n//Sign Up\nconst generateAccount = payload => {\n  return request.post('v2/accounts', payload).then(response => {\n    const { error, data } = response.data;\n    if (error) {\n      throw new Error(Utils.parseApiError(error));\n    } else return data;\n  });\n};\n\nconst activateAccount = payload => {\n  return request.post('v2/accounts/me/activate', payload).then(response => {\n    const { error, data } = response.data;\n    if (error) {\n      throw new Error(Utils.parseApiError(error));\n    } else return data;\n  });\n};\n\n//Global\nconst requestNewCode = () => {\n  return request.post('v2/two-steps-auth/generate').then(response => {\n    const { error, data } = response.data;\n    if (error) {\n      throw new Error(Utils.parseApiError(error));\n    } else return data;\n  });\n};\n\nconst isLoggedIn = () => {\n  const token = sessionStorage.getItem('auth-token');\n  return !!token;\n};\n\nexport {\n  login,\n  loginTwoFactor,\n  generateAccount,\n  activateAccount,\n  requestNewCode,\n  isLoggedIn\n};\n"]},"metadata":{},"sourceType":"module"}