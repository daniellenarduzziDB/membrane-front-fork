{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"/home/juanma/projects/membrane-front/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/juanma/projects/membrane-front/src/legacy/components/Form/Field/Password/index.js\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState } from 'react';\nimport classnames from 'classnames'; //styles\n\nimport * as styles from './styles.module.scss';\nimport * as fieldStyles from '../styles.module.scss'; //regex\n\nimport * as regex from '../../../../helpers/regex'; //components\n\nimport FontAwesomeIcon, { faEye, faEyeSlash, faCheckCircle } from '../../../FontAwesomeIcon';\nimport { validations } from './validations';\nexport default function Password(_ref) {\n  _s();\n\n  var _this = this;\n\n  var name = _ref.name,\n      placeholder = _ref.placeholder,\n      watch = _ref.watch,\n      register = _ref.register;\n  //bind styles\n  classnames.bind(styles);\n  classnames.bind(fieldStyles);\n\n  var _useState = useState(true),\n      passwordVisibility = _useState[0],\n      setPasswordVisibility = _useState[1];\n\n  var handlePasswordVisibility = function handlePasswordVisibility() {\n    setPasswordVisibility(!passwordVisibility);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: fieldStyles.fieldInput,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", _objectSpread({\n        name: name,\n        type: !passwordVisibility ? 'text' : 'password',\n        placeholder: placeholder\n      }, register(name, {\n        required: 'This field is required',\n        pattern: regex.PWD\n      })), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: passwordVisibility ? faEye : faEyeSlash,\n        onClick: handlePasswordVisibility\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: styles.verifyItems,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Your password must contain\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), validations.map(function (item) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faCheckCircle,\n            color: item.isValid(name, watch) ? '#6fcf97' : '#777777'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: item.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, _this)]\n        }, item.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, _this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Password, \"7rPImbdHsODP7bwji/KZdtnLfKU=\");\n\n_c = Password;\n\nvar _c;\n\n$RefreshReg$(_c, \"Password\");","map":{"version":3,"sources":["/home/juanma/projects/membrane-front/src/legacy/components/Form/Field/Password/index.js"],"names":["useState","classnames","styles","fieldStyles","regex","FontAwesomeIcon","faEye","faEyeSlash","faCheckCircle","validations","Password","name","placeholder","watch","register","bind","passwordVisibility","setPasswordVisibility","handlePasswordVisibility","fieldInput","required","pattern","PWD","verifyItems","map","item","isValid","text"],"mappings":";;;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,UAAP,MAAuB,YAAvB,C,CAEA;;AACA,OAAO,KAAKC,MAAZ,MAAwB,sBAAxB;AACA,OAAO,KAAKC,WAAZ,MAA6B,uBAA7B,C,CAEA;;AACA,OAAO,KAAKC,KAAZ,MAAuB,2BAAvB,C,CAEA;;AACA,OAAOC,eAAP,IACEC,KADF,EAEEC,UAFF,EAGEC,aAHF,QAIO,0BAJP;AAMA,SAASC,WAAT,QAA4B,eAA5B;AAEA,eAAe,SAASC,QAAT,OAA0D;AAAA;;AAAA;;AAAA,MAAtCC,IAAsC,QAAtCA,IAAsC;AAAA,MAAhCC,WAAgC,QAAhCA,WAAgC;AAAA,MAAnBC,KAAmB,QAAnBA,KAAmB;AAAA,MAAZC,QAAY,QAAZA,QAAY;AACvE;AACAb,EAAAA,UAAU,CAACc,IAAX,CAAgBb,MAAhB;AACAD,EAAAA,UAAU,CAACc,IAAX,CAAgBZ,WAAhB;;AAHuE,kBAKnBH,QAAQ,CAAC,IAAD,CALW;AAAA,MAKhEgB,kBALgE;AAAA,MAK5CC,qBAL4C;;AAOvE,MAAMC,wBAAwB,GAAG,SAA3BA,wBAA2B,GAAM;AACrCD,IAAAA,qBAAqB,CAAC,CAACD,kBAAF,CAArB;AACD,GAFD;;AAIA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEb,WAAW,CAACgB,UAA5B;AAAA,8BACE;AACE,QAAA,IAAI,EAAER,IADR;AAEE,QAAA,IAAI,EAAE,CAACK,kBAAD,GAAsB,MAAtB,GAA+B,UAFvC;AAGE,QAAA,WAAW,EAAEJ;AAHf,SAIME,QAAQ,CAACH,IAAD,EAAO;AACjBS,QAAAA,QAAQ,EAAE,wBADO;AAEjBC,QAAAA,OAAO,EAAEjB,KAAK,CAACkB;AAFE,OAAP,CAJd;AAAA;AAAA;AAAA;AAAA,cADF,eAWE,QAAC,eAAD;AACE,QAAA,IAAI,EAAEN,kBAAkB,GAAGV,KAAH,GAAWC,UADrC;AAEE,QAAA,OAAO,EAAEW;AAFX;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAkBE;AAAM,MAAA,SAAS,EAAEhB,MAAM,CAACqB,WAAxB;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEGd,WAAW,CAACe,GAAZ,CAAgB,UAAAC,IAAI;AAAA,4BACnB;AAAA,kCACE,QAAC,eAAD;AACE,YAAA,IAAI,EAAEjB,aADR;AAEE,YAAA,KAAK,EAAEiB,IAAI,CAACC,OAAL,CAAaf,IAAb,EAAmBE,KAAnB,IAA4B,SAA5B,GAAwC;AAFjD;AAAA;AAAA;AAAA;AAAA,mBADF,eAKE;AAAA,sBAAQY,IAAI,CAACE;AAAb;AAAA;AAAA;AAAA;AAAA,mBALF;AAAA,WAAUF,IAAI,CAACd,IAAf;AAAA;AAAA;AAAA;AAAA,iBADmB;AAAA,OAApB,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YAlBF;AAAA,kBADF;AAiCD;;GA5CuBD,Q;;KAAAA,Q","sourcesContent":["import { useState } from 'react';\nimport classnames from 'classnames';\n\n//styles\nimport * as styles from './styles.module.scss';\nimport * as fieldStyles from '../styles.module.scss';\n\n//regex\nimport * as regex from '../../../../helpers/regex';\n\n//components\nimport FontAwesomeIcon, {\n  faEye,\n  faEyeSlash,\n  faCheckCircle\n} from '../../../FontAwesomeIcon';\n\nimport { validations } from './validations';\n\nexport default function Password({ name, placeholder, watch, register }) {\n  //bind styles\n  classnames.bind(styles);\n  classnames.bind(fieldStyles);\n\n  const [passwordVisibility, setPasswordVisibility] = useState(true);\n\n  const handlePasswordVisibility = () => {\n    setPasswordVisibility(!passwordVisibility);\n  };\n\n  return (\n    <>\n      <div className={fieldStyles.fieldInput}>\n        <input\n          name={name}\n          type={!passwordVisibility ? 'text' : 'password'}\n          placeholder={placeholder}\n          {...register(name, {\n            required: 'This field is required',\n            pattern: regex.PWD\n          })}\n        />\n\n        <FontAwesomeIcon\n          icon={passwordVisibility ? faEye : faEyeSlash}\n          onClick={handlePasswordVisibility}\n        />\n      </div>\n\n      <span className={styles.verifyItems}>\n        <label>Your password must contain</label>\n        {validations.map(item => (\n          <div key={item.name}>\n            <FontAwesomeIcon\n              icon={faCheckCircle}\n              color={item.isValid(name, watch) ? '#6fcf97' : '#777777'}\n            />\n            <label>{item.text}</label>\n          </div>\n        ))}\n      </span>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}