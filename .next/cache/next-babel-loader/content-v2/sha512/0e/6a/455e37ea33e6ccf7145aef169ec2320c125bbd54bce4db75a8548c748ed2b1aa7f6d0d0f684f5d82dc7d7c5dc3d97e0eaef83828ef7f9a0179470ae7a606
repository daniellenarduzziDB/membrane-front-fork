{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/juanma/projects/membrane-front/src/legacy/components/ButtonGroup/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { memo, useEffect, useRef } from 'react';\nimport classnames from 'classnames';\nimport shortid from 'shortid'; //styles\n\nimport * as styles from './styles.module.scss';\n\nfunction ButtonGroup(props) {\n  _s();\n\n  var _this = this;\n\n  var items = props.items,\n      stylingMode = props.stylingMode,\n      defaultSelected = props.defaultSelected,\n      classes = props.classes; //references\n\n  var tabRef = useRef(null);\n  var selectorRef = useRef(null); //bind styles\n\n  classnames.bind(styles, classes);\n  useEffect(function () {\n    setTimeout(function () {\n      moveSelector();\n    }, 250); // eslint-disable-next-line\n  }, []);\n  useEffect(function () {\n    if (defaultSelected) moveSelector(); // eslint-disable-next-line\n  }, [defaultSelected]);\n\n  var _onClick = function onClick(e, index) {\n    e.preventDefault();\n    Event.preventDoubleClick(e, function () {\n      moveSelector(e);\n      if (props.onItemClick) props.onItemClick(index);\n    });\n  };\n\n  var moveSelector = function moveSelector(e) {\n    var previous = defaultSelected ? tabRef.current.querySelector(\"button[data-order='\".concat(defaultSelected, \"']\")) : tabRef.current.querySelector('button');\n    var current = (e === null || e === void 0 ? void 0 : e.target) || previous;\n    selectorRef.current.style.left = \"\".concat(current.offsetLeft, \"px\");\n    selectorRef.current.style.width = \"\".concat(current.offsetWidth, \"px\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    ref: tabRef,\n    className: classnames(styles.tabs, styles[stylingMode], classes),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: selectorRef,\n      className: classnames(styles.selector, 'selector')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), items.map(function (item, index) {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        \"data-order\": index,\n        onClick: function onClick(e) {\n          return _onClick(e, index);\n        },\n        children: (item === null || item === void 0 ? void 0 : item.text) || item\n      }, shortid.generate(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, _this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ButtonGroup, \"e0oM6qbaF6Vb4/ucpuwMYw2Ak1Y=\");\n\n_c = ButtonGroup;\nButtonGroup.defaultProps = {\n  items: [],\n  defaultSelected: null,\n  stylingMode: 'contained' || 'outlined'\n};\nexport default _c2 = /*#__PURE__*/memo(ButtonGroup);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ButtonGroup\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/juanma/projects/membrane-front/src/legacy/components/ButtonGroup/index.js"],"names":["React","memo","useEffect","useRef","classnames","shortid","styles","ButtonGroup","props","items","stylingMode","defaultSelected","classes","tabRef","selectorRef","bind","setTimeout","moveSelector","onClick","e","index","preventDefault","Event","preventDoubleClick","onItemClick","previous","current","querySelector","target","style","left","offsetLeft","width","offsetWidth","tabs","selector","map","item","text","generate","defaultProps"],"mappings":"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","sourcesContent":["import React, { memo, useEffect, useRef } from 'react';\nimport classnames from 'classnames';\nimport shortid from 'shortid';\n\n//styles\nimport * as styles from './styles.module.scss';\n\nfunction ButtonGroup(props) {\n  const { items, stylingMode, defaultSelected, classes } = props;\n\n  //references\n  const tabRef = useRef(null);\n  const selectorRef = useRef(null);\n\n  //bind styles\n  classnames.bind(styles, classes);\n\n  useEffect(() => {\n    setTimeout(() => {\n      moveSelector();\n    }, 250);\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    if (defaultSelected) moveSelector();\n    // eslint-disable-next-line\n  }, [defaultSelected]);\n\n  const onClick = (e, index) => {\n    e.preventDefault();\n\n    Event.preventDoubleClick(e, () => {\n      moveSelector(e);\n      if (props.onItemClick) props.onItemClick(index);\n    });\n  };\n\n  const moveSelector = e => {\n    let previous = defaultSelected\n      ? tabRef.current.querySelector(`button[data-order='${defaultSelected}']`)\n      : tabRef.current.querySelector('button');\n\n    let current = e?.target || previous;\n    selectorRef.current.style.left = `${current.offsetLeft}px`;\n    selectorRef.current.style.width = `${current.offsetWidth}px`;\n  };\n\n  return (\n    <nav\n      ref={tabRef}\n      className={classnames(styles.tabs, styles[stylingMode], classes)}>\n      <div\n        ref={selectorRef}\n        className={classnames(styles.selector, 'selector')}\n      />\n      {items.map((item, index) => (\n        <button\n          key={shortid.generate()}\n          data-order={index}\n          onClick={e => onClick(e, index)}>\n          {item?.text || item}\n        </button>\n      ))}\n    </nav>\n  );\n}\n\nButtonGroup.defaultProps = {\n  items: [],\n  defaultSelected: null,\n  stylingMode: 'contained' || 'outlined'\n};\n\nexport default memo(ButtonGroup);\n"]},"metadata":{},"sourceType":"module"}