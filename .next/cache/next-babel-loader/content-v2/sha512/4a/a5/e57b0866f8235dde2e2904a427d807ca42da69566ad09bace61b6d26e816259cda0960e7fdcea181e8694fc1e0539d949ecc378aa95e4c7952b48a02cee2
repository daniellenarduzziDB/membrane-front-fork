{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/juanma/projects/membrane-front/src/pages/_document.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Document from \"next/document\";\nimport { ServerStyleSheet } from \"styled-components\";\n/**\n * The puporse of custom _document\n * is for css-in-js with ssr\n * https://styled-components.com/docs/advanced#server-side-rendering\n * https://nextjs.org/docs/advanced-features/custom-document#customizing-renderpage\n */\n\nclass MyDocument extends Document {\n  static async getInitialProps(ctx) {\n    const originalRenderPage = ctx.renderPage;\n    const sheet = new ServerStyleSheet();\n\n    ctx.renderPage = () => originalRenderPage({\n      // useful for wrapping the whole react tree\n      enhanceApp: App => props => {\n        return sheet.collectStyles( /*#__PURE__*/_jsxDEV(App, _objectSpread({}, props), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 38\n        }, this));\n      }\n    }); // Run the parent `getInitialProps`, it now includes the custom `renderPage`\n\n\n    const initialProps = await Document.getInitialProps(ctx);\n    return initialProps;\n  }\n\n}\n\nexport default MyDocument;","map":{"version":3,"sources":["/home/juanma/projects/membrane-front/src/pages/_document.tsx"],"names":["Document","ServerStyleSheet","MyDocument","getInitialProps","ctx","originalRenderPage","renderPage","sheet","enhanceApp","App","props","collectStyles","initialProps"],"mappings":";;;;;;;;;AAAA,OAAOA,QAAP,MAA0C,eAA1C;AACA,SAASC,gBAAT,QAAiC,mBAAjC;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,UAAN,SAAyBF,QAAzB,CAAkC;AAChC,eAAaG,eAAb,CAA6BC,GAA7B,EAAmD;AACjD,UAAMC,kBAAkB,GAAGD,GAAG,CAACE,UAA/B;AACA,UAAMC,KAAK,GAAG,IAAIN,gBAAJ,EAAd;;AAEAG,IAAAA,GAAG,CAACE,UAAJ,GAAiB,MACfD,kBAAkB,CAAC;AACjB;AACAG,MAAAA,UAAU,EAAGC,GAAD,IAAUC,KAAD,IAAW;AAC9B,eAAOH,KAAK,CAACI,aAAN,eAAoB,QAAC,GAAD,oBAASD,KAAT;AAAA;AAAA;AAAA;AAAA,gBAApB,CAAP;AACD;AAJgB,KAAD,CADpB,CAJiD,CAYjD;;;AACA,UAAME,YAAY,GAAG,MAAMZ,QAAQ,CAACG,eAAT,CAAyBC,GAAzB,CAA3B;AAEA,WAAOQ,YAAP;AACD;;AAjB+B;;AAoBlC,eAAeV,UAAf","sourcesContent":["import Document, { DocumentContext } from \"next/document\";\nimport { ServerStyleSheet } from \"styled-components\";\n\n/**\n * The puporse of custom _document\n * is for css-in-js with ssr\n * https://styled-components.com/docs/advanced#server-side-rendering\n * https://nextjs.org/docs/advanced-features/custom-document#customizing-renderpage\n */\nclass MyDocument extends Document {\n  static async getInitialProps(ctx: DocumentContext) {\n    const originalRenderPage = ctx.renderPage;\n    const sheet = new ServerStyleSheet();\n\n    ctx.renderPage = () =>\n      originalRenderPage({\n        // useful for wrapping the whole react tree\n        enhanceApp: (App) => (props) => {\n          return sheet.collectStyles(<App {...props} />);\n        },\n      });\n\n    // Run the parent `getInitialProps`, it now includes the custom `renderPage`\n    const initialProps = await Document.getInitialProps(ctx);\n\n    return initialProps;\n  }\n}\n\nexport default MyDocument;\n"]},"metadata":{},"sourceType":"module"}