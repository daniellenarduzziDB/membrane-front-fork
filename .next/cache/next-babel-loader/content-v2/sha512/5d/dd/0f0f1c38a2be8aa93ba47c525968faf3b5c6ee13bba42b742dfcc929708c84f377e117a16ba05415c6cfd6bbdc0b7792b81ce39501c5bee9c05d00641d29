{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/juanma/projects/membrane-front/src/legacy/components/Form/Field/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState } from 'react';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types'; //styles\n\nimport * as styles from './styles.module.scss'; //components\n\nimport MobileNumber from './MobileNumber';\nimport Password from './Password';\nimport DropDown from './DropDown';\nimport FontAwesomeIcon, { faEye, faEyeSlash } from '../../FontAwesomeIcon';\n\nfunction Field({\n  label,\n  name,\n  type,\n  placeholder,\n  size,\n  customComponent,\n  editorOptions,\n  validation,\n  formState\n}) {\n  var _errors$name;\n\n  //bind styles\n  classnames.bind(styles); //states\n\n  const {\n    0: passwordVisibility,\n    1: setPasswordVisibility\n  } = useState(true);\n  const {\n    register,\n    errors\n  } = formState;\n\n  const handlePasswordVisibility = () => {\n    setPasswordVisibility(!passwordVisibility);\n  };\n\n  const renderDefaultComponent = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classnames(styles.fieldInput),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", _objectSpread({\n        name: name,\n        type: type !== 'password' ? type : passwordVisibility ? 'password' : 'text',\n        placeholder: placeholder\n      }, register(name, validation)), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), type === 'password' && /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: passwordVisibility ? faEye : faEyeSlash,\n        onClick: handlePasswordVisibility\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n  };\n\n  const renderMobileNumber = () => {\n    return /*#__PURE__*/_jsxDEV(MobileNumber, _objectSpread({\n      name: name\n    }, formState), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 12\n    }, this);\n  };\n\n  const renderDropdown = () => {\n    return /*#__PURE__*/_jsxDEV(DropDown, _objectSpread(_objectSpread({\n      name: name,\n      placeholder: placeholder,\n      validation: validation\n    }, editorOptions), formState), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this);\n  };\n\n  const renderPasswordSecure = () => {\n    return /*#__PURE__*/_jsxDEV(Password, _objectSpread({\n      name: name,\n      placeholder: placeholder\n    }, formState), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 12\n    }, this);\n  };\n\n  const renderCustomComponent = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: customComponent()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 12\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classnames(styles.field, styles[size]),\n    children: /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [label, type === 'tel' ? renderMobileNumber() : type === 'dropdown' ? renderDropdown() : type === 'password-secure' ? renderPasswordSecure() : type === 'custom' ? renderCustomComponent() : renderDefaultComponent(), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.fieldValidation,\n        children: errors[name] && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: (_errors$name = errors[name]) === null || _errors$name === void 0 ? void 0 : _errors$name.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 28\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n} //#region props definitions\n// default values and types\n\n\nField.defaultProps = {\n  label: undefined,\n  name: '',\n  type: 'text',\n  placeholder: '',\n  size: 'col-12',\n  customComponent: undefined,\n  editorOptions: {},\n  validation: {},\n  errors: {}\n};\nField.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string,\n  type: PropTypes.oneOf(['text', 'password', 'password-secure', 'dropdown', 'color', 'date', 'email', 'radio', 'range', 'submit', 'tel', 'url', 'custom']),\n  placeholder: PropTypes.string,\n  size: PropTypes.string,\n  customComponent: PropTypes.func,\n  editorOptions: PropTypes.object,\n  validation: PropTypes.object,\n  errors: PropTypes.object\n}; //#endregion\n\nexport default Field;","map":{"version":3,"sources":["/home/juanma/projects/membrane-front/src/legacy/components/Form/Field/index.js"],"names":["useState","classnames","PropTypes","styles","MobileNumber","Password","DropDown","FontAwesomeIcon","faEye","faEyeSlash","Field","label","name","type","placeholder","size","customComponent","editorOptions","validation","formState","bind","passwordVisibility","setPasswordVisibility","register","errors","handlePasswordVisibility","renderDefaultComponent","fieldInput","renderMobileNumber","renderDropdown","renderPasswordSecure","renderCustomComponent","field","fieldValidation","message","defaultProps","undefined","propTypes","string","isRequired","oneOf","func","object"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\n\n//styles\nimport * as styles from './styles.module.scss';\n\n//components\nimport MobileNumber from './MobileNumber';\nimport Password from './Password';\nimport DropDown from './DropDown';\nimport FontAwesomeIcon, { faEye, faEyeSlash } from '../../FontAwesomeIcon';\n\nfunction Field({\n  label,\n  name,\n  type,\n  placeholder,\n  size,\n  customComponent,\n  editorOptions,\n  validation,\n  formState\n}) {\n  //bind styles\n  classnames.bind(styles);\n\n  //states\n  const [passwordVisibility, setPasswordVisibility] = useState(true);\n\n  const { register, errors } = formState;\n\n  const handlePasswordVisibility = () => {\n    setPasswordVisibility(!passwordVisibility);\n  };\n\n  const renderDefaultComponent = () => {\n    return (\n      <div className={classnames(styles.fieldInput)}>\n        <input\n          name={name}\n          type={\n            type !== 'password'\n              ? type\n              : passwordVisibility\n              ? 'password'\n              : 'text'\n          }\n          placeholder={placeholder}\n          {...register(name, validation)}\n        />\n        {type === 'password' && (\n          <FontAwesomeIcon\n            icon={passwordVisibility ? faEye : faEyeSlash}\n            onClick={handlePasswordVisibility}\n          />\n        )}\n      </div>\n    );\n  };\n\n  const renderMobileNumber = () => {\n    return <MobileNumber name={name} {...formState} />;\n  };\n\n  const renderDropdown = () => {\n    return (\n      <DropDown\n        name={name}\n        placeholder={placeholder}\n        validation={validation}\n        {...editorOptions}\n        {...formState}\n      />\n    );\n  };\n\n  const renderPasswordSecure = () => {\n    return <Password name={name} placeholder={placeholder} {...formState} />;\n  };\n\n  const renderCustomComponent = () => {\n    return <div>{customComponent()}</div>;\n  };\n\n  return (\n    <div className={classnames(styles.field, styles[size])}>\n      <label>\n        {label}\n        {type === 'tel'\n          ? renderMobileNumber()\n          : type === 'dropdown'\n          ? renderDropdown()\n          : type === 'password-secure'\n          ? renderPasswordSecure()\n          : type === 'custom'\n          ? renderCustomComponent()\n          : renderDefaultComponent()}\n\n        <div className={styles.fieldValidation}>\n          {errors[name] && <p>{errors[name]?.message}</p>}\n        </div>\n      </label>\n    </div>\n  );\n}\n\n//#region props definitions\n// default values and types\nField.defaultProps = {\n  label: undefined,\n  name: '',\n  type: 'text',\n  placeholder: '',\n  size: 'col-12',\n  customComponent: undefined,\n  editorOptions: {},\n  validation: {},\n  errors: {}\n};\n\nField.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string,\n  type: PropTypes.oneOf([\n    'text',\n    'password',\n    'password-secure',\n    'dropdown',\n    'color',\n    'date',\n    'email',\n    'radio',\n    'range',\n    'submit',\n    'tel',\n    'url',\n    'custom'\n  ]),\n  placeholder: PropTypes.string,\n  size: PropTypes.string,\n  customComponent: PropTypes.func,\n  editorOptions: PropTypes.object,\n  validation: PropTypes.object,\n  errors: PropTypes.object\n};\n//#endregion\n\nexport default Field;\n"]},"metadata":{},"sourceType":"module"}