{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/juanma/projects/membrane-front/src/legacy/context/AlertContext.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from 'react'; //components\n\nimport Alert from '../components/Alert';\nconst AlertContext = /*#__PURE__*/React.createContext({});\nconst defaultTimeOut = 5000;\nexport function AlertContextProvider({\n  children\n}) {\n  const {\n    0: alert,\n    1: setAlert\n  } = useState(null);\n  const {\n    0: displayAlert,\n    1: setDisplayAlert\n  } = useState(false);\n  useEffect(() => {\n    const timer = () => setTimeout(() => setDisplayAlert(false), alert.lifetime ? alert.lifetime : defaultTimeOut);\n\n    if (alert) {\n      timer();\n      setDisplayAlert(true);\n    }\n  }, [alert]);\n  return /*#__PURE__*/_jsxDEV(AlertContext.Provider, {\n    value: {\n      setAlert\n    },\n    children: [/*#__PURE__*/_jsxDEV(Alert, _objectSpread({\n      displayAlert: displayAlert\n    }, alert), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\nexport default AlertContext;","map":{"version":3,"sources":["/home/juanma/projects/membrane-front/src/legacy/context/AlertContext.js"],"names":["React","useEffect","useState","Alert","AlertContext","createContext","defaultTimeOut","AlertContextProvider","children","alert","setAlert","displayAlert","setDisplayAlert","timer","setTimeout","lifetime"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C,C,CAEA;;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AAEA,MAAMC,YAAY,gBAAGJ,KAAK,CAACK,aAAN,CAAoB,EAApB,CAArB;AACA,MAAMC,cAAc,GAAG,IAAvB;AAEA,OAAO,SAASC,oBAAT,CAA8B;AAAEC,EAAAA;AAAF,CAA9B,EAA4C;AACjD,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBR,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM;AAAA,OAACS,YAAD;AAAA,OAAeC;AAAf,MAAkCV,QAAQ,CAAC,KAAD,CAAhD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMY,KAAK,GAAG,MACZC,UAAU,CACR,MAAMF,eAAe,CAAC,KAAD,CADb,EAERH,KAAK,CAACM,QAAN,GAAiBN,KAAK,CAACM,QAAvB,GAAkCT,cAF1B,CADZ;;AAMA,QAAIG,KAAJ,EAAW;AACTI,MAAAA,KAAK;AACLD,MAAAA,eAAe,CAAC,IAAD,CAAf;AACD;AACF,GAXQ,EAWN,CAACH,KAAD,CAXM,CAAT;AAaA,sBACE,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAAEC,MAAAA;AAAF,KAA9B;AAAA,4BACE,QAAC,KAAD;AAAO,MAAA,YAAY,EAAEC;AAArB,OAAuCF,KAAvC;AAAA;AAAA;AAAA;AAAA,YADF,EAEGD,QAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;AAED,eAAeJ,YAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\n\n//components\nimport Alert from '../components/Alert';\n\nconst AlertContext = React.createContext({});\nconst defaultTimeOut = 5000;\n\nexport function AlertContextProvider({ children }) {\n  const [alert, setAlert] = useState(null);\n  const [displayAlert, setDisplayAlert] = useState(false);\n\n  useEffect(() => {\n    const timer = () =>\n      setTimeout(\n        () => setDisplayAlert(false),\n        alert.lifetime ? alert.lifetime : defaultTimeOut\n      );\n\n    if (alert) {\n      timer();\n      setDisplayAlert(true);\n    }\n  }, [alert]);\n\n  return (\n    <AlertContext.Provider value={{ setAlert }}>\n      <Alert displayAlert={displayAlert} {...alert} />\n      {children}\n    </AlertContext.Provider>\n  );\n}\n\nexport default AlertContext;\n"]},"metadata":{},"sourceType":"module"}