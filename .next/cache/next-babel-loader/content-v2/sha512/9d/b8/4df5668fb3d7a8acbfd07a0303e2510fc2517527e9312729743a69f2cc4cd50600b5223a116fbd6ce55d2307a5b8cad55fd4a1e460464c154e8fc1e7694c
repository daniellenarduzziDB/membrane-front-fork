{"ast":null,"code":"import { request } from '../config/axios';\nimport Utils from '../lib/utils';\n\nvar getEntries = function getEntries(params) {\n  var url = 'v2/whitelist-entries';\n  return request.get(url, params).then(function (response) {\n    var _response$data = response.data,\n        error = _response$data.error,\n        data = _response$data.data;\n\n    if (error) {\n      throw new Error(Utils.parseApiError(error));\n    } else return data;\n  });\n};\n\nvar updateEntryStatus = function updateEntryStatus(entryId, status) {\n  var url = \"v2/whitelist-entries/\".concat(entryId);\n  var payload = {\n    actions: [{\n      action: \"changeStatus\",\n      status: status\n    }]\n  };\n  return request.post(url, payload).then(function (response) {\n    var _response$data2 = response.data,\n        error = _response$data2.error,\n        data = _response$data2.data;\n\n    if (error) {\n      throw new Error(Utils.parseApiError(error));\n    } else return data;\n  });\n};\n\nexport { getEntries, updateEntryStatus };","map":{"version":3,"sources":["/home/juanma/projects/membrane-front/src/legacy/services/whitelisting.js"],"names":["request","Utils","getEntries","params","url","get","then","response","data","error","Error","parseApiError","updateEntryStatus","entryId","status","payload","actions","action","post"],"mappings":"AAAA,SAASA,OAAT,QAAwB,iBAAxB;AACA,OAAOC,KAAP,MAAkB,cAAlB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAAAC,MAAM,EAAI;AAC3B,MAAMC,GAAG,GAAG,sBAAZ;AACA,SAAOJ,OAAO,CAACK,GAAR,CAAYD,GAAZ,EAAiBD,MAAjB,EAAyBG,IAAzB,CAA8B,UAAAC,QAAQ,EAAI;AAAA,yBACvBA,QAAQ,CAACC,IADc;AAAA,QACvCC,KADuC,kBACvCA,KADuC;AAAA,QAChCD,IADgC,kBAChCA,IADgC;;AAE/C,QAAIC,KAAJ,EAAW;AACT,YAAM,IAAIC,KAAJ,CAAUT,KAAK,CAACU,aAAN,CAAoBF,KAApB,CAAV,CAAN;AACD,KAFD,MAEO,OAAOD,IAAP;AACR,GALM,CAAP;AAMD,CARD;;AAUA,IAAMI,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,OAAD,EAAUC,MAAV,EAAqB;AAC7C,MAAMV,GAAG,kCAA2BS,OAA3B,CAAT;AACA,MAAME,OAAO,GAAG;AACdC,IAAAA,OAAO,EAAE,CAAC;AAAEC,MAAAA,MAAM,EAAE,cAAV;AAA0BH,MAAAA,MAAM,EAANA;AAA1B,KAAD;AADK,GAAhB;AAGA,SAAOd,OAAO,CAACkB,IAAR,CAAad,GAAb,EAAkBW,OAAlB,EAA2BT,IAA3B,CAAgC,UAAAC,QAAQ,EAAI;AAAA,0BACzBA,QAAQ,CAACC,IADgB;AAAA,QACzCC,KADyC,mBACzCA,KADyC;AAAA,QAClCD,IADkC,mBAClCA,IADkC;;AAEjD,QAAIC,KAAJ,EAAW;AACT,YAAM,IAAIC,KAAJ,CAAUT,KAAK,CAACU,aAAN,CAAoBF,KAApB,CAAV,CAAN;AACD,KAFD,MAEO,OAAOD,IAAP;AACR,GALM,CAAP;AAMD,CAXD;;AAaA,SACEN,UADF,EAEEU,iBAFF","sourcesContent":["import { request } from '../config/axios';\nimport Utils from '../lib/utils';\n\nconst getEntries = params => {\n  const url = 'v2/whitelist-entries';\n  return request.get(url, params).then(response => {\n    const { error, data } = response.data;\n    if (error) {\n      throw new Error(Utils.parseApiError(error));\n    } else return data;\n  });\n};\n\nconst updateEntryStatus = (entryId, status) => {\n  const url = `v2/whitelist-entries/${entryId}`;\n  const payload = {\n    actions: [{ action: \"changeStatus\", status }]\n  };\n  return request.post(url, payload).then(response => {\n    const { error, data } = response.data;\n    if (error) {\n      throw new Error(Utils.parseApiError(error));\n    } else return data;\n  });\n};\n\nexport { \n  getEntries,\n  updateEntryStatus\n};"]},"metadata":{},"sourceType":"module"}