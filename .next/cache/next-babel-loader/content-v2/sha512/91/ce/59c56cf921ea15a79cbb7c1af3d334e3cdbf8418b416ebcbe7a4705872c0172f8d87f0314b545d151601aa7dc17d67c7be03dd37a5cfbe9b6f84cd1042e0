{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/juanma/projects/membrane-front/src/legacy/views/Main/Users/Tabs/Whitelist/index.js\",\n    _s = $RefreshSig$();\n\nimport { memo, useState, useEffect } from 'react';\nimport classnames from 'classnames';\nimport _ from 'lodash';\nimport getColumnSettings from './columnSettings'; //hooks\n\nimport useWhitelisting from '../../../../../hooks/useWhitelisting'; //components\n\nimport NoEntries from '../../NoEntries';\nimport Pagination from '../../../../../components/Pagination';\nimport Table from '../../../../../components/Table'; //styles\n\nimport * as styles from './styles.module.scss';\nexport default _c2 = /*#__PURE__*/memo(_c = _s(function Whitelist() {\n  _s();\n\n  //bind styles\n  classnames.bind(styles); //hook user\n\n  var _useWhitelisting = useWhitelisting(),\n      fetchEntries = _useWhitelisting.fetchEntries,\n      changeEntryStatus = _useWhitelisting.changeEntryStatus,\n      fetchingEntries = _useWhitelisting.fetchingEntries,\n      entries = _useWhitelisting.entries,\n      totalEntries = _useWhitelisting.totalEntries; //states\n\n\n  var _useState = useState(10),\n      itemsPerPage = _useState[0],\n      setItemsPerPage = _useState[1];\n\n  var _useState2 = useState(1),\n      pageNumber = _useState2[0],\n      setPageNumber = _useState2[1]; //effects\n\n\n  useEffect(function () {\n    if (!fetchingEntries) {\n      fetchEntries({\n        offset: (pageNumber - 1) * itemsPerPage,\n        limit: itemsPerPage\n      });\n    }\n  }, [fetchEntries, pageNumber, itemsPerPage]); //functions\n\n  var onItemsPerPageChange = function onItemsPerPageChange(ipp) {\n    setPageNumber(1);\n    setItemsPerPage(ipp);\n  };\n\n  var onPageChange = function onPageChange(newPage) {\n    setPageNumber(newPage);\n  };\n\n  var onChangeStatus = function onChangeStatus(entryId, allowed) {\n    var status = allowed ? 'active' : 'disabled';\n    changeEntryStatus(entryId, status);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.whitelist,\n    children: fetchingEntries || entries.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Table, {\n        loading: fetchingEntries,\n        columnSettings: getColumnSettings(onChangeStatus),\n        data: entries\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n        loading: fetchingEntries,\n        itemsPerPage: itemsPerPage,\n        currentPageNumber: pageNumber,\n        onItemsPerPageChange: onItemsPerPageChange,\n        onSetPage: onPageChange,\n        totalItems: totalEntries\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(NoEntries, {\n      heading: \"There are no users added yet.\",\n      message: \"Add users to start trading!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}, \"6r76f7ICIzt+MjPFk2SsvxmcnWk=\", false, function () {\n  return [useWhitelisting];\n}));\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"%default%$memo\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/juanma/projects/membrane-front/src/legacy/views/Main/Users/Tabs/Whitelist/index.js"],"names":["memo","useState","useEffect","classnames","_","getColumnSettings","useWhitelisting","NoEntries","Pagination","Table","styles","Whitelist","bind","fetchEntries","changeEntryStatus","fetchingEntries","entries","totalEntries","itemsPerPage","setItemsPerPage","pageNumber","setPageNumber","offset","limit","onItemsPerPageChange","ipp","onPageChange","newPage","onChangeStatus","entryId","allowed","status","whitelist","length"],"mappings":";;;;;;AAAA,SAASA,IAAT,EAAeC,QAAf,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,iBAAP,MAA8B,kBAA9B,C,CAEA;;AACA,OAAOC,eAAP,MAA4B,sCAA5B,C,CAEA;;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,OAAOC,UAAP,MAAuB,sCAAvB;AACA,OAAOC,KAAP,MAAkB,iCAAlB,C,CAEA;;AACA,OAAO,KAAKC,MAAZ,MAAwB,sBAAxB;AAEA,kCAAeV,IAAI,SAAC,SAASW,SAAT,GAAqB;AAAA;;AACvC;AACAR,EAAAA,UAAU,CAACS,IAAX,CAAgBF,MAAhB,EAFuC,CAIvC;;AAJuC,yBAWnCJ,eAAe,EAXoB;AAAA,MAMrCO,YANqC,oBAMrCA,YANqC;AAAA,MAOrCC,iBAPqC,oBAOrCA,iBAPqC;AAAA,MAQrCC,eARqC,oBAQrCA,eARqC;AAAA,MASrCC,OATqC,oBASrCA,OATqC;AAAA,MAUrCC,YAVqC,oBAUrCA,YAVqC,EAavC;;;AAbuC,kBAcChB,QAAQ,CAAC,EAAD,CAdT;AAAA,MAchCiB,YAdgC;AAAA,MAclBC,eAdkB;;AAAA,mBAeHlB,QAAQ,CAAC,CAAD,CAfL;AAAA,MAehCmB,UAfgC;AAAA,MAepBC,aAfoB,kBAiBvC;;;AACAnB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAI,CAACa,eAAL,EAAsB;AACpBF,MAAAA,YAAY,CAAC;AACXS,QAAAA,MAAM,EAAE,CAACF,UAAU,GAAC,CAAZ,IAAeF,YADZ;AAEXK,QAAAA,KAAK,EAAEL;AAFI,OAAD,CAAZ;AAID;AACF,GAPQ,EAON,CAACL,YAAD,EAAeO,UAAf,EAA2BF,YAA3B,CAPM,CAAT,CAlBuC,CA2BvC;;AACA,MAAMM,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,GAAD,EAAS;AACpCJ,IAAAA,aAAa,CAAC,CAAD,CAAb;AACAF,IAAAA,eAAe,CAACM,GAAD,CAAf;AACD,GAHD;;AAKA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,OAAD,EAAa;AAChCN,IAAAA,aAAa,CAACM,OAAD,CAAb;AACD,GAFD;;AAIA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,OAAD,EAAUC,OAAV,EAAsB;AAC3C,QAAMC,MAAM,GAAGD,OAAO,GAAE,QAAF,GAAW,UAAjC;AACAhB,IAAAA,iBAAiB,CAACe,OAAD,EAAUE,MAAV,CAAjB;AACD,GAHD;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAErB,MAAM,CAACsB,SAAvB;AAAA,cAEIjB,eAAe,IAAIC,OAAO,CAACiB,MAAR,GAAiB,CAApC,gBACA;AAAA,8BACE,QAAC,KAAD;AACE,QAAA,OAAO,EAAElB,eADX;AAEE,QAAA,cAAc,EAAEV,iBAAiB,CAACuB,cAAD,CAFnC;AAGE,QAAA,IAAI,EAAEZ;AAHR;AAAA;AAAA;AAAA;AAAA,cADF,eAME,QAAC,UAAD;AACE,QAAA,OAAO,EAAED,eADX;AAEE,QAAA,YAAY,EAAEG,YAFhB;AAGE,QAAA,iBAAiB,EAAEE,UAHrB;AAIE,QAAA,oBAAoB,EAAEI,oBAJxB;AAKE,QAAA,SAAS,EAAEE,YALb;AAME,QAAA,UAAU,EAAET;AANd;AAAA;AAAA;AAAA;AAAA,cANF;AAAA,oBADA,gBAiBA,QAAC,SAAD;AACE,MAAA,OAAO,EAAC,+BADV;AAEE,MAAA,OAAO,EAAC;AAFV;AAAA;AAAA;AAAA;AAAA;AAnBJ;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD,CArEkB;AAAA,UAWbX,eAXa;AAAA,GAAnB","sourcesContent":["import { memo, useState, useEffect } from 'react';\nimport classnames from 'classnames';\nimport _ from 'lodash';\nimport getColumnSettings from './columnSettings';\n\n//hooks\nimport useWhitelisting from '../../../../../hooks/useWhitelisting';\n\n//components\nimport NoEntries from '../../NoEntries';\nimport Pagination from '../../../../../components/Pagination';\nimport Table from '../../../../../components/Table';\n\n//styles\nimport * as styles from './styles.module.scss';\n\nexport default memo(function Whitelist() {\n  //bind styles\n  classnames.bind(styles);\n\n  //hook user\n  const { \n    fetchEntries,\n    changeEntryStatus,\n    fetchingEntries,\n    entries,\n    totalEntries \n  } = useWhitelisting();\n\n  //states\n  const [itemsPerPage, setItemsPerPage] = useState(10);\n  const [pageNumber, setPageNumber] = useState(1);\n\n  //effects\n  useEffect(() => {\n    if (!fetchingEntries) {\n      fetchEntries({\n        offset: (pageNumber-1)*itemsPerPage,\n        limit: itemsPerPage\n      });\n    }\n  }, [fetchEntries, pageNumber, itemsPerPage]);\n\n  //functions\n  const onItemsPerPageChange = (ipp) => {\n    setPageNumber(1);\n    setItemsPerPage(ipp);\n  };\n\n  const onPageChange = (newPage) => {\n    setPageNumber(newPage);\n  };\n\n  const onChangeStatus = (entryId, allowed) => {\n    const status = allowed? 'active':'disabled';\n    changeEntryStatus(entryId, status);\n  }\n\n  return (\n    <div className={styles.whitelist}>\n      {\n        fetchingEntries || entries.length > 0 ?\n        <>\n          <Table\n            loading={fetchingEntries}\n            columnSettings={getColumnSettings(onChangeStatus)} \n            data={entries}\n          />\n          <Pagination\n            loading={fetchingEntries}\n            itemsPerPage={itemsPerPage}\n            currentPageNumber={pageNumber}\n            onItemsPerPageChange={onItemsPerPageChange}\n            onSetPage={onPageChange}\n            totalItems={totalEntries}\n          />\n        </>\n        :\n        <NoEntries\n          heading='There are no users added yet.'\n          message='Add users to start trading!'\n        />\n      }\n    </div>\n  );\n});\n"]},"metadata":{},"sourceType":"module"}