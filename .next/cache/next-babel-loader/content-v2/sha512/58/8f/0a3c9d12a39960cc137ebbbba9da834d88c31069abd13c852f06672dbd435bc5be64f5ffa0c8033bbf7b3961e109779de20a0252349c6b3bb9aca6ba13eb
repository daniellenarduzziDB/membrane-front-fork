{"ast":null,"code":"import _defineProperty from \"/home/juanma/projects/membrane-front/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/juanma/projects/membrane-front/src/legacy/components/PrivateRoute.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { Redirect, Route } from 'react-router'; //services\n\nimport { isLoggedIn } from '../services/auth'; //hooks\n\nimport useUser from '../hooks/useUser';\n\nvar PrivateRoute = function PrivateRoute(props) {\n  _s();\n\n  var _useUser = useUser(),\n      twoFactorAuth = _useUser.twoFactorAuth;\n\n  var path = props.path,\n      Component = props.component;\n\n  if (path === '/two-factor') {\n    if (twoFactorAuth && !isLoggedIn()) {\n      return /*#__PURE__*/_jsxDEV(Route, {\n        render: function render(props) {\n          return /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, props), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 38\n          }, _this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 14\n      }, _this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: {\n          pathname: '/'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 14\n      }, _this);\n    }\n  } else {\n    return /*#__PURE__*/_jsxDEV(Route, {\n      render: function render(props) {\n        return isLoggedIn() ? /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, props), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, _this) : /*#__PURE__*/_jsxDEV(Redirect, {\n          to: {\n            pathname: '/sign-in'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, _this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, _this);\n  }\n};\n\n_s(PrivateRoute, \"p1kkKaPq67g2+FqzSPe2Z5WMxfo=\", false, function () {\n  return [useUser];\n});\n\n_c = PrivateRoute;\nexport default PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["/home/juanma/projects/membrane-front/src/legacy/components/PrivateRoute.js"],"names":["React","Redirect","Route","isLoggedIn","useUser","PrivateRoute","props","twoFactorAuth","path","Component","component","pathname"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,cAAhC,C,CAEA;;AACA,SAASC,UAAT,QAA2B,kBAA3B,C,CAEA;;AACA,OAAOC,OAAP,MAAoB,kBAApB;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAC,KAAK,EAAI;AAAA;;AAAA,iBACFF,OAAO,EADL;AAAA,MACpBG,aADoB,YACpBA,aADoB;;AAAA,MAEpBC,IAFoB,GAEWF,KAFX,CAEpBE,IAFoB;AAAA,MAEHC,SAFG,GAEWH,KAFX,CAEdI,SAFc;;AAI5B,MAAIF,IAAI,KAAK,aAAb,EAA4B;AAC1B,QAAID,aAAa,IAAI,CAACJ,UAAU,EAAhC,EAAoC;AAClC,0BAAO,QAAC,KAAD;AAAO,QAAA,MAAM,EAAE,gBAAAG,KAAK;AAAA,8BAAI,QAAC,SAAD,oBAAeA,KAAf;AAAA;AAAA;AAAA;AAAA,mBAAJ;AAAA;AAApB;AAAA;AAAA;AAAA;AAAA,eAAP;AACD,KAFD,MAEO;AACL,0BAAO,QAAC,QAAD;AAAU,QAAA,EAAE,EAAE;AAAEK,UAAAA,QAAQ,EAAE;AAAZ;AAAd;AAAA;AAAA;AAAA;AAAA,eAAP;AACD;AACF,GAND,MAMO;AACL,wBACE,QAAC,KAAD;AACE,MAAA,MAAM,EAAE,gBAAAL,KAAK;AAAA,eACXH,UAAU,kBACR,QAAC,SAAD,oBAAeG,KAAf;AAAA;AAAA;AAAA;AAAA,iBADQ,gBAGR,QAAC,QAAD;AAAU,UAAA,EAAE,EAAE;AAAEK,YAAAA,QAAQ,EAAE;AAAZ;AAAd;AAAA;AAAA;AAAA;AAAA,iBAJS;AAAA;AADf;AAAA;AAAA;AAAA;AAAA,aADF;AAWD;AACF,CAvBD;;GAAMN,Y;UACsBD,O;;;KADtBC,Y;AAyBN,eAAeA,YAAf","sourcesContent":["import React from 'react';\nimport { Redirect, Route } from 'react-router';\n\n//services\nimport { isLoggedIn } from '../services/auth';\n\n//hooks\nimport useUser from '../hooks/useUser';\n\nconst PrivateRoute = props => {\n  const { twoFactorAuth } = useUser();\n  const { path, component: Component } = props;\n\n  if (path === '/two-factor') {\n    if (twoFactorAuth && !isLoggedIn()) {\n      return <Route render={props => <Component {...props} />} />;\n    } else {\n      return <Redirect to={{ pathname: '/' }} />;\n    }\n  } else {\n    return (\n      <Route\n        render={props =>\n          isLoggedIn() ? (\n            <Component {...props} />\n          ) : (\n            <Redirect to={{ pathname: '/sign-in' }} />\n          )\n        }\n      />\n    );\n  }\n};\n\nexport default PrivateRoute;\n"]},"metadata":{},"sourceType":"module"}