{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/juanma/projects/membrane-front/src/legacy/components/Pagination/index.js\";\nimport { memo } from 'react';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types'; //components\n\nimport FontAwesomeIcon, { faChevronDown as arrowDown, faChevronLeft as arrowLeft, faChevronRight as arrowRight } from '../FontAwesomeIcon'; //styles\n\nimport * as styles from './styles.module.scss';\n\nfunction Pagination({\n  currentPageNumber,\n  hideItemsPerPage,\n  loading,\n  itemsPerPage,\n  itemsPerPageOptions,\n  onItemsPerPageChange,\n  onSetPage,\n  totalItems,\n  totalPagesShown\n}) {\n  //bind styles\n  classnames.bind(styles);\n\n  const renderPages = () => {\n    const pagesLength = Math.ceil(totalItems / itemsPerPage);\n    let pagesButtons = [];\n\n    for (let i = 1; i <= pagesLength; i++) {\n      let className = classnames(styles.pageNumber, {\n        [styles.active]: currentPageNumber === i\n      });\n      pagesButtons.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: className,\n        onClick: e => {\n          onSetPage(i);\n        },\n        children: i\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this));\n    }\n\n    const totalShown = totalPagesShown;\n    const half = Math.floor(totalShown / 2);\n    let firstIdx = currentPageNumber - half;\n    let lastIdx = currentPageNumber + half; // special case for odd number of shown pages\n\n    if (totalShown % 2 !== 0) {\n      firstIdx -= 1;\n    } // handle begining and end of list\n\n\n    if (currentPageNumber <= half) {\n      firstIdx = 0;\n      lastIdx = totalShown;\n    } else if (currentPageNumber >= pagesLength - half) {\n      firstIdx = Math.max(0, pagesLength - totalShown);\n      lastIdx = pagesLength;\n    }\n\n    const showPrev = currentPageNumber > 1;\n    const showNext = currentPageNumber < pagesLength;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.paginationWrapper,\n      children: [showPrev && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.paginationBtn,\n        onClick: e => {\n          onSetPage(1);\n        },\n        children: \"First\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), showPrev && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.paginationBtn,\n        onClick: e => {\n          onSetPage(Math.max(currentPageNumber - 1, 1));\n        },\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: arrowLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), pagesButtons.slice(firstIdx, lastIdx), showNext && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.paginationBtn,\n        onClick: e => {\n          onSetPage(Math.min(currentPageNumber + 1, pagesLength));\n        },\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: arrowRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), showNext && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.paginationBtn,\n        onClick: e => {\n          onSetPage(pagesLength);\n        },\n        children: \"Last\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this);\n  };\n\n  const renderItemsPerPage = () => {\n    const options = itemsPerPageOptions;\n    const firstElement = (currentPageNumber - 1) * itemsPerPage + 1;\n    const lastElement = Math.min(currentPageNumber * itemsPerPage, totalItems);\n    let selectedLabel = `${firstElement}-${lastElement} of ${totalItems}`;\n\n    if (totalItems === 0) {\n      selectedLabel = '0 of 0';\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.itemsPerPage,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.label,\n        children: \"Show\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.itemsPerPageSelector,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.selectedLabel,\n          children: selectedLabel\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: arrowDown\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: e => {\n            onItemsPerPageChange(e.target.value);\n          },\n          value: itemsPerPage,\n          children: options.map((opt, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: opt,\n            children: opt\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 41\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this);\n  };\n\n  return !loading && /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.pagination,\n    children: [totalItems > itemsPerPage && renderPages(), !hideItemsPerPage && totalItems > 0 && renderItemsPerPage()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n}\n\n; //#region props definitions\n// default values and types\n\nPagination.defaultProps = {\n  hideItemsPerPage: false,\n  loading: false,\n  itemsPerPageOptions: [10, 20, 30, 40, 50],\n  totalPagesShown: 5\n};\nPagination.propTypes = {\n  currentPageNumber: PropTypes.number.isRequired,\n  hideItemsPerPage: PropTypes.bool,\n  loading: PropTypes.bool,\n  itemsPerPage: PropTypes.number.isRequired,\n  itemsPerPageOptions: PropTypes.arrayOf(PropTypes.number),\n  onItemsPerPageChange: PropTypes.func,\n  onSetPage: PropTypes.func.isRequired,\n  totalItems: PropTypes.number.isRequired,\n  totalPagesShown: PropTypes.number\n}; //#endregion\n\nexport default /*#__PURE__*/memo(Pagination);","map":{"version":3,"sources":["/home/juanma/projects/membrane-front/src/legacy/components/Pagination/index.js"],"names":["memo","classnames","PropTypes","FontAwesomeIcon","faChevronDown","arrowDown","faChevronLeft","arrowLeft","faChevronRight","arrowRight","styles","Pagination","currentPageNumber","hideItemsPerPage","loading","itemsPerPage","itemsPerPageOptions","onItemsPerPageChange","onSetPage","totalItems","totalPagesShown","bind","renderPages","pagesLength","Math","ceil","pagesButtons","i","className","pageNumber","active","push","e","totalShown","half","floor","firstIdx","lastIdx","max","showPrev","showNext","paginationWrapper","paginationBtn","slice","min","renderItemsPerPage","options","firstElement","lastElement","selectedLabel","label","itemsPerPageSelector","target","value","map","opt","idx","pagination","defaultProps","propTypes","number","isRequired","bool","arrayOf","func"],"mappings":"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","sourcesContent":["import { memo } from 'react';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\n\n//components\nimport FontAwesomeIcon, {\n  faChevronDown as arrowDown,\n  faChevronLeft as arrowLeft,\n  faChevronRight as arrowRight,\n} from '../FontAwesomeIcon';\n\n//styles\nimport * as styles from './styles.module.scss';\n\nfunction Pagination({\n  currentPageNumber,\n  hideItemsPerPage,\n  loading,\n  itemsPerPage,\n  itemsPerPageOptions,\n  onItemsPerPageChange,\n  onSetPage,\n  totalItems,\n  totalPagesShown\n}) {\n  //bind styles\n  classnames.bind(styles);\n  \n  const renderPages = () => {\n    const pagesLength = Math.ceil(totalItems/itemsPerPage);\n    let pagesButtons = [];\n\n    for (let i = 1; i <= pagesLength; i++) {\n      let className = classnames(styles.pageNumber, {\n        [styles.active]: currentPageNumber === i\n      });\n      pagesButtons.push(\n        <div\n          key={i}\n          className={className}\n          onClick={(e) => { onSetPage(i) }} >\n          {i}\n        </div>\n      );\n    }\n\n    const totalShown = totalPagesShown;\n    const half = Math.floor(totalShown/2);\n    let firstIdx = currentPageNumber-half;\n    let lastIdx = currentPageNumber+half;\n    // special case for odd number of shown pages\n    if(totalShown % 2 !== 0) {\n      firstIdx -= 1;\n    }\n    // handle begining and end of list\n    if(currentPageNumber <= half){\n      firstIdx = 0;\n      lastIdx = totalShown;\n    } else if (currentPageNumber >= pagesLength-half) {\n      firstIdx = Math.max(0, pagesLength-totalShown);\n      lastIdx = pagesLength;\n    }\n\n    const showPrev = currentPageNumber > 1;\n    const showNext = currentPageNumber < pagesLength;\n\n    return (\n      <div className={styles.paginationWrapper}>\n        {\n          showPrev &&\n          <div className={styles.paginationBtn}\n          onClick={(e) => { onSetPage(1) }} >\n            First\n          </div>\n        }\n        {\n          showPrev &&\n          <div className={styles.paginationBtn}\n          onClick={(e) => { onSetPage(Math.max(currentPageNumber - 1, 1)) }} >\n            <FontAwesomeIcon icon={arrowLeft} />\n          </div>\n        }\n        {pagesButtons.slice(firstIdx, lastIdx)}\n        {\n          showNext &&\n          <div className={styles.paginationBtn}\n          onClick={(e) => { onSetPage(Math.min(currentPageNumber + 1, pagesLength)) }} >\n            <FontAwesomeIcon icon={arrowRight} />\n          </div>\n        }\n        {\n          showNext &&\n          <div className={styles.paginationBtn}\n          onClick={(e) => { onSetPage(pagesLength) }} >\n            Last\n          </div>\n        }\n      </div>\n    );\n  }\n\n  const renderItemsPerPage = () => {\n    const options = itemsPerPageOptions;\n    const firstElement = ((currentPageNumber - 1) * itemsPerPage) + 1;\n    const lastElement = Math.min(currentPageNumber * itemsPerPage, totalItems);\n    let selectedLabel = `${firstElement}-${lastElement} of ${totalItems}`;\n    if(totalItems === 0){\n      selectedLabel = '0 of 0';\n    }\n\n    return (\n      <div className={styles.itemsPerPage}>\n        <div className={styles.label}>Show</div>\n        <div className={styles.itemsPerPageSelector}>\n          <div className={styles.selectedLabel}>{selectedLabel}</div>\n          <FontAwesomeIcon icon={arrowDown} />\n          <select onChange={(e) => { onItemsPerPageChange(e.target.value) }} value={itemsPerPage}>\n            { options.map((opt, idx) => <option key={idx} value={opt} >{opt}</option>) }\n          </select>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    !loading &&\n    <div className={styles.pagination}>\n      { totalItems > itemsPerPage && renderPages() }\n      { !hideItemsPerPage && totalItems > 0 && renderItemsPerPage() }\n    </div>\n  );\n};\n\n//#region props definitions\n// default values and types\nPagination.defaultProps = {\n  hideItemsPerPage: false,\n  loading: false,\n  itemsPerPageOptions: [10, 20, 30, 40, 50],\n  totalPagesShown: 5\n};\n\nPagination.propTypes = {\n  currentPageNumber: PropTypes.number.isRequired,\n  hideItemsPerPage: PropTypes.bool,\n  loading: PropTypes.bool,\n  itemsPerPage: PropTypes.number.isRequired,\n  itemsPerPageOptions: PropTypes.arrayOf(PropTypes.number),\n  onItemsPerPageChange: PropTypes.func,\n  onSetPage: PropTypes.func.isRequired,\n  totalItems: PropTypes.number.isRequired,\n  totalPagesShown: PropTypes.number\n};\n//#endregion\n\nexport default memo(Pagination);\n"]},"metadata":{},"sourceType":"module"}