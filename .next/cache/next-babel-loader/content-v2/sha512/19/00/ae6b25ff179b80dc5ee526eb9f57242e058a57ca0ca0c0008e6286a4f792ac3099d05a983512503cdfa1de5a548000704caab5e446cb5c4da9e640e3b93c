{"ast":null,"code":"import _classCallCheck from \"/home/juanma/projects/membrane-front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/juanma/projects/membrane-front/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _ from 'lodash';\n\nvar Utils = /*#__PURE__*/function () {\n  function Utils() {\n    _classCallCheck(this, Utils);\n  }\n\n  _createClass(Utils, null, [{\n    key: \"parseApiError\",\n    value: function parseApiError(error) {\n      if (!error) return null;\n      var defMsg = typeof error === 'string' ? error : 'Something went wrong';\n\n      var errMsg = _.get(error, 'message', null);\n\n      var resErr = _.get(error, 'response.data.error', null);\n\n      var resErrMsg = _.get(error, 'response.data.error.message', null);\n\n      return resErrMsg || resErr || errMsg || defMsg;\n    }\n  }, {\n    key: \"convertToQueryParameters\",\n    value: function convertToQueryParameters(payload) {\n      return payload ? '?'.concat(new URLSearchParams(payload).toString()) : '';\n    }\n  }]);\n\n  return Utils;\n}();\n\nexport { Utils as default };","map":{"version":3,"sources":["/home/juanma/projects/membrane-front/src/legacy/lib/utils.js"],"names":["_","Utils","error","defMsg","errMsg","get","resErr","resErrMsg","payload","concat","URLSearchParams","toString"],"mappings":";;AAAA,OAAOA,CAAP,MAAc,QAAd;;IAEqBC,K;;;;;;;kCACEC,K,EAAO;AAC1B,UAAI,CAACA,KAAL,EAAY,OAAO,IAAP;AACZ,UAAMC,MAAM,GAAG,OAAOD,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoC,sBAAnD;;AACA,UAAME,MAAM,GAAGJ,CAAC,CAACK,GAAF,CAAMH,KAAN,EAAa,SAAb,EAAwB,IAAxB,CAAf;;AACA,UAAMI,MAAM,GAAGN,CAAC,CAACK,GAAF,CAAMH,KAAN,EAAa,qBAAb,EAAoC,IAApC,CAAf;;AACA,UAAMK,SAAS,GAAGP,CAAC,CAACK,GAAF,CAAMH,KAAN,EAAa,6BAAb,EAA4C,IAA5C,CAAlB;;AACA,aAAOK,SAAS,IAAID,MAAb,IAAuBF,MAAvB,IAAiCD,MAAxC;AACD;;;6CAE+BK,O,EAAS;AACvC,aAAOA,OAAO,GAAG,IAAIC,MAAJ,CAAW,IAAIC,eAAJ,CAAoBF,OAApB,EAA6BG,QAA7B,EAAX,CAAH,GAAyD,EAAvE;AACD;;;;;;SAZkBV,K","sourcesContent":["import _ from 'lodash';\n\nexport default class Utils {\n  static parseApiError(error) {\n    if (!error) return null;\n    const defMsg = typeof error === 'string' ? error : 'Something went wrong';\n    const errMsg = _.get(error, 'message', null);\n    const resErr = _.get(error, 'response.data.error', null);\n    const resErrMsg = _.get(error, 'response.data.error.message', null);\n    return resErrMsg || resErr || errMsg || defMsg;\n  }\n\n  static convertToQueryParameters(payload) {\n    return payload ? '?'.concat(new URLSearchParams(payload).toString()) : '';\n  }\n}\n"]},"metadata":{},"sourceType":"module"}