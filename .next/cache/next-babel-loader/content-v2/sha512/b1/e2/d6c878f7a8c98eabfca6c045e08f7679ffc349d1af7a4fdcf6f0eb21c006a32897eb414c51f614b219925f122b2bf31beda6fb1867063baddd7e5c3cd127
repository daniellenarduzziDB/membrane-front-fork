{"ast":null,"code":"import _defineProperty from \"/home/juanma/projects/membrane-front/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/juanma/projects/membrane-front/src/legacy/components/DigitCode/index.js\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { memo, useEffect, useState } from 'react';\nimport classnames from 'classnames';\nimport useDigitInput from 'react-digit-input'; //styles\n\nimport * as styles from './styles.module.scss';\nimport * as regex from '../../helpers/regex';\nexport default _c2 = /*#__PURE__*/memo(_c = _s(function DigitCode(_ref) {\n  _s();\n\n  var _ref$digits = _ref.digits,\n      digits = _ref$digits === void 0 ? 0 : _ref$digits,\n      onDigitCodeChange = _ref.onDigitCodeChange;\n  //bind styles\n  classnames.bind(styles);\n\n  var _useState = useState(''),\n      value = _useState[0],\n      onChange = _useState[1];\n\n  var digitInput = useDigitInput({\n    acceptedCharacters: regex.ONLY_NUMBERS,\n    length: digits,\n    value: value,\n    onChange: onChange\n  });\n  useEffect(function () {\n    onDigitCodeChange(digitInput, value); // eslint-disable-next-line\n  }, [value]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.digitCode,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.inputGroup,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", _objectSpread({\n        inputMode: \"decimal\",\n        autoFocus: true\n      }, digitInput[0]), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", _objectSpread({\n        inputMode: \"decimal\"\n      }, digitInput[1]), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", _objectSpread({\n        inputMode: \"decimal\"\n      }, digitInput[2]), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", _objectSpread({\n        inputMode: \"decimal\"\n      }, digitInput[3]), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", _objectSpread({\n        inputMode: \"decimal\"\n      }, digitInput[4]), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", _objectSpread({\n        inputMode: \"decimal\"\n      }, digitInput[5]), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}, \"ZRniN+W/5bIgMINezLW+O5k78bU=\", false, function () {\n  return [useDigitInput];\n}));\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"%default%$memo\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/juanma/projects/membrane-front/src/legacy/components/DigitCode/index.js"],"names":["memo","useEffect","useState","classnames","useDigitInput","styles","regex","DigitCode","digits","onDigitCodeChange","bind","value","onChange","digitInput","acceptedCharacters","ONLY_NUMBERS","length","digitCode","inputGroup"],"mappings":";;;;;;;;;;AAAA,SAASA,IAAT,EAAeC,SAAf,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,aAAP,MAA0B,mBAA1B,C,CAEA;;AACA,OAAO,KAAKC,MAAZ,MAAwB,sBAAxB;AAEA,OAAO,KAAKC,KAAZ,MAAuB,qBAAvB;AAEA,kCAAeN,IAAI,SAAC,SAASO,SAAT,OAAsD;AAAA;;AAAA,yBAAjCC,MAAiC;AAAA,MAAjCA,MAAiC,4BAAxB,CAAwB;AAAA,MAArBC,iBAAqB,QAArBA,iBAAqB;AACxE;AACAN,EAAAA,UAAU,CAACO,IAAX,CAAgBL,MAAhB;;AAFwE,kBAI9CH,QAAQ,CAAC,EAAD,CAJsC;AAAA,MAIjES,KAJiE;AAAA,MAI1DC,QAJ0D;;AAMxE,MAAMC,UAAU,GAAGT,aAAa,CAAC;AAC/BU,IAAAA,kBAAkB,EAAER,KAAK,CAACS,YADK;AAE/BC,IAAAA,MAAM,EAAER,MAFuB;AAG/BG,IAAAA,KAAK,EAALA,KAH+B;AAI/BC,IAAAA,QAAQ,EAARA;AAJ+B,GAAD,CAAhC;AAOAX,EAAAA,SAAS,CAAC,YAAM;AACdQ,IAAAA,iBAAiB,CAACI,UAAD,EAAaF,KAAb,CAAjB,CADc,CAEd;AACD,GAHQ,EAGN,CAACA,KAAD,CAHM,CAAT;AAKA,sBACE;AAAK,IAAA,SAAS,EAAEN,MAAM,CAACY,SAAvB;AAAA,2BACE;AAAK,MAAA,SAAS,EAAEZ,MAAM,CAACa,UAAvB;AAAA,8BACE;AAAO,QAAA,SAAS,EAAC,SAAjB;AAA2B,QAAA,SAAS;AAApC,SAAyCL,UAAU,CAAC,CAAD,CAAnD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,SAAS,EAAC;AAAjB,SAA+BA,UAAU,CAAC,CAAD,CAAzC;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAO,QAAA,SAAS,EAAC;AAAjB,SAA+BA,UAAU,CAAC,CAAD,CAAzC;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAO,QAAA,SAAS,EAAC;AAAjB,SAA+BA,UAAU,CAAC,CAAD,CAAzC;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAO,QAAA,SAAS,EAAC;AAAjB,SAA+BA,UAAU,CAAC,CAAD,CAAzC;AAAA;AAAA;AAAA;AAAA,cALF,eAME;AAAO,QAAA,SAAS,EAAC;AAAjB,SAA+BA,UAAU,CAAC,CAAD,CAAzC;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CA9BkB;AAAA,UAMET,aANF;AAAA,GAAnB","sourcesContent":["import { memo, useEffect, useState } from 'react';\nimport classnames from 'classnames';\nimport useDigitInput from 'react-digit-input';\n\n//styles\nimport * as styles from './styles.module.scss';\n\nimport * as regex from '../../helpers/regex';\n\nexport default memo(function DigitCode({ digits = 0, onDigitCodeChange }) {\n  //bind styles\n  classnames.bind(styles);\n\n  const [value, onChange] = useState('');\n\n  const digitInput = useDigitInput({\n    acceptedCharacters: regex.ONLY_NUMBERS,\n    length: digits,\n    value,\n    onChange\n  });\n\n  useEffect(() => {\n    onDigitCodeChange(digitInput, value);\n    // eslint-disable-next-line\n  }, [value]);\n\n  return (\n    <div className={styles.digitCode}>\n      <div className={styles.inputGroup}>\n        <input inputMode=\"decimal\" autoFocus {...digitInput[0]} />\n        <input inputMode=\"decimal\" {...digitInput[1]} />\n        <input inputMode=\"decimal\" {...digitInput[2]} />\n        <input inputMode=\"decimal\" {...digitInput[3]} />\n        <input inputMode=\"decimal\" {...digitInput[4]} />\n        <input inputMode=\"decimal\" {...digitInput[5]} />\n      </div>\n    </div>\n  );\n});\n"]},"metadata":{},"sourceType":"module"}