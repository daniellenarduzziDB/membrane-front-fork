{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/juanma/projects/membrane-front/src/legacy/views/SignUp/steps/PersonalInformation.js\";\nimport { memo } from 'react'; //styles\n\nimport * as styles from '../styles.module.scss'; //components\n\nimport Form from '../../../components/Form'; //regex validation\n\nimport * as regex from '../../../helpers/regex'; //hooks\n\nimport useUser from '../../../hooks/useUser';\nimport useAlert from '../../../hooks/useAlert';\nexport default /*#__PURE__*/memo(function PersonalInformation(props) {\n  //hook user\n  const {\n    signUp\n  } = useUser();\n  const [pushAlert] = useAlert();\n\n  const onSubmit = data => {\n    data.phoneNumber = data.prefix.concat(data.phoneNumber);\n    delete data.prefix;\n    delete data.phoneCode;\n    data.jobTitle = '';\n    data.state = 'CABA';\n    signUp(data).then(response => {\n      props.onComplete(response);\n    }).catch(error => {\n      pushAlert({\n        type: 'error',\n        message: error.message,\n        lifetime: 5000\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Please, enter your personal information\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"*Required fields\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.signUpForm,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        items: [{\n          label: 'First Name *',\n          name: 'firstName',\n          type: 'text',\n          size: 'col-6',\n          placeholder: 'Enter your first name here',\n          validation: {\n            required: 'This field is required'\n          }\n        }, {\n          label: 'Last Name *',\n          name: 'lastName',\n          type: 'text',\n          size: 'col-6',\n          placeholder: 'Enter your last name here',\n          validation: {\n            required: 'This field is required'\n          }\n        }, {\n          label: 'Email *',\n          name: 'email',\n          type: 'text',\n          placeholder: 'Enter your email here',\n          validation: {\n            required: 'This field is required',\n            pattern: {\n              value: regex.EMAIL,\n              message: 'Invalid email format'\n            }\n          }\n        }, {\n          label: 'Company',\n          name: 'company',\n          type: 'text',\n          size: 'col-6',\n          placeholder: 'Enter your company name here'\n        }, {\n          label: 'Phone Number *',\n          name: 'phoneNumber',\n          type: 'tel',\n          size: 'col-6'\n        }],\n        actions: [{\n          type: 'primary',\n          useSubmitBehavior: true,\n          label: 'Next',\n          onClick: onSubmit\n        }, {\n          type: 'tertiary',\n          label: 'Already have an account?',\n          linkTo: '/sign-in'\n        }]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n});","map":{"version":3,"sources":["/home/juanma/projects/membrane-front/src/legacy/views/SignUp/steps/PersonalInformation.js"],"names":["memo","styles","Form","regex","useUser","useAlert","PersonalInformation","props","signUp","pushAlert","onSubmit","data","phoneNumber","prefix","concat","phoneCode","jobTitle","state","then","response","onComplete","catch","error","type","message","lifetime","signUpForm","label","name","size","placeholder","validation","required","pattern","value","EMAIL","useSubmitBehavior","onClick","linkTo"],"mappings":"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","sourcesContent":["import { memo } from 'react';\n\n//styles\nimport * as styles from '../styles.module.scss';\n\n//components\nimport Form from '../../../components/Form';\n\n//regex validation\nimport * as regex from '../../../helpers/regex';\n\n//hooks\nimport useUser from '../../../hooks/useUser';\nimport useAlert from '../../../hooks/useAlert';\n\nexport default memo(function PersonalInformation(props) {\n  //hook user\n  const { signUp } = useUser();\n  const [pushAlert] = useAlert();\n\n  const onSubmit = data => {\n    data.phoneNumber = data.prefix.concat(data.phoneNumber);\n    delete data.prefix;\n    delete data.phoneCode;\n\n    data.jobTitle = '';\n    data.state = 'CABA';\n\n    signUp(data)\n      .then(response => {\n        props.onComplete(response);\n      })\n      .catch(error => {\n        pushAlert({\n          type: 'error',\n          message: error.message,\n          lifetime: 5000\n        });\n      });\n  };\n\n  return (\n    <>\n      <label>Please, enter your personal information</label>\n      <span>*Required fields</span>\n      <div className={styles.signUpForm}>\n        <Form\n          items={[\n            {\n              label: 'First Name *',\n              name: 'firstName',\n              type: 'text',\n              size: 'col-6',\n              placeholder: 'Enter your first name here',\n              validation: {\n                required: 'This field is required'\n              }\n            },\n            {\n              label: 'Last Name *',\n              name: 'lastName',\n              type: 'text',\n              size: 'col-6',\n              placeholder: 'Enter your last name here',\n              validation: {\n                required: 'This field is required'\n              }\n            },\n            {\n              label: 'Email *',\n              name: 'email',\n              type: 'text',\n              placeholder: 'Enter your email here',\n              validation: {\n                required: 'This field is required',\n                pattern: {\n                  value: regex.EMAIL,\n                  message: 'Invalid email format'\n                }\n              }\n            },\n            {\n              label: 'Company',\n              name: 'company',\n              type: 'text',\n              size: 'col-6',\n              placeholder: 'Enter your company name here'\n            },\n            {\n              label: 'Phone Number *',\n              name: 'phoneNumber',\n              type: 'tel',\n              size: 'col-6'\n            }\n          ]}\n          actions={[\n            {\n              type: 'primary',\n              useSubmitBehavior: true,\n              label: 'Next',\n              onClick: onSubmit\n            },\n            {\n              type: 'tertiary',\n              label: 'Already have an account?',\n              linkTo: '/sign-in'\n            }\n          ]}\n        />\n      </div>\n    </>\n  );\n});\n"]},"metadata":{},"sourceType":"module"}