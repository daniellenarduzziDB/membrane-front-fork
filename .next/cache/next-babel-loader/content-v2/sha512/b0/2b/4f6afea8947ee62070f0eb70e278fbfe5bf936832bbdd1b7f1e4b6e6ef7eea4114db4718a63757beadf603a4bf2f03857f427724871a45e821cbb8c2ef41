{"ast":null,"code":"import axios from 'axios';\nimport Utils from '../lib/utils';\nvar api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL\n});\napi.interceptors.request.use(function (config) {\n  var token = sessionStorage.getItem('auth-token');\n  if (token) config.headers.Authorization = 'bearer ' + token;\n  return config;\n});\nexport var setAuthorizationHeader = function setAuthorizationHeader(token) {\n  api.defaults.headers.common['Authorization'] = 'bearer ' + token;\n};\nexport var request = {\n  get: function get(url, payload) {\n    return api.get(url.concat(Utils.convertToQueryParameters(payload)));\n  },\n  post: function post(url, payload) {\n    return api.post(url, payload);\n  }\n};","map":{"version":3,"sources":["/home/juanma/projects/membrane-front/src/legacy/config/axios.js"],"names":["axios","Utils","api","create","baseURL","process","env","REACT_APP_API_URL","interceptors","request","use","config","token","sessionStorage","getItem","headers","Authorization","setAuthorizationHeader","defaults","common","get","url","payload","concat","convertToQueryParameters","post"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,cAAlB;AAEA,IAAMC,GAAG,GAAGF,KAAK,CAACG,MAAN,CAAa;AACvBC,EAAAA,OAAO,EAAEC,OAAO,CAACC,GAAR,CAAYC;AADE,CAAb,CAAZ;AAIAL,GAAG,CAACM,YAAJ,CAAiBC,OAAjB,CAAyBC,GAAzB,CAA6B,UAAAC,MAAM,EAAI;AACrC,MAAMC,KAAK,GAAGC,cAAc,CAACC,OAAf,CAAuB,YAAvB,CAAd;AACA,MAAIF,KAAJ,EAAWD,MAAM,CAACI,OAAP,CAAeC,aAAf,GAA+B,YAAYJ,KAA3C;AACX,SAAOD,MAAP;AACD,CAJD;AAMA,OAAO,IAAMM,sBAAsB,GAAG,SAAzBA,sBAAyB,CAAAL,KAAK,EAAI;AAC7CV,EAAAA,GAAG,CAACgB,QAAJ,CAAaH,OAAb,CAAqBI,MAArB,CAA4B,eAA5B,IAA+C,YAAYP,KAA3D;AACD,CAFM;AAIP,OAAO,IAAMH,OAAO,GAAG;AACrBW,EAAAA,GAAG,EAAE,aAACC,GAAD,EAAMC,OAAN,EAAkB;AACrB,WAAOpB,GAAG,CAACkB,GAAJ,CAAQC,GAAG,CAACE,MAAJ,CAAWtB,KAAK,CAACuB,wBAAN,CAA+BF,OAA/B,CAAX,CAAR,CAAP;AACD,GAHoB;AAIrBG,EAAAA,IAAI,EAAE,cAACJ,GAAD,EAAMC,OAAN,EAAkB;AACtB,WAAOpB,GAAG,CAACuB,IAAJ,CAASJ,GAAT,EAAcC,OAAd,CAAP;AACD;AANoB,CAAhB","sourcesContent":["import axios from 'axios';\nimport Utils from '../lib/utils';\n\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL\n});\n\napi.interceptors.request.use(config => {\n  const token = sessionStorage.getItem('auth-token');\n  if (token) config.headers.Authorization = 'bearer ' + token;\n  return config;\n});\n\nexport const setAuthorizationHeader = token => {\n  api.defaults.headers.common['Authorization'] = 'bearer ' + token;\n};\n\nexport const request = {\n  get: (url, payload) => {\n    return api.get(url.concat(Utils.convertToQueryParameters(payload)));\n  },\n  post: (url, payload) => {\n    return api.post(url, payload);\n  }\n};\n"]},"metadata":{},"sourceType":"module"}