{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/juanma/projects/membrane-front/src/components/shared/ErrorBoundary/ErrorBoundary.tsx\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\n\nclass ErrorBoundary extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      hasError: false\n    });\n  }\n\n  static getDerivedStateFromError() {\n    return {\n      hasError: true\n    };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    console.error(error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Algo fall\\xF3 en la aplicaci\\xF3n.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 14\n      }, this);\n    }\n\n    return this.props.children;\n  }\n\n}\n\nexport default ErrorBoundary;","map":{"version":3,"sources":["/home/juanma/projects/membrane-front/src/components/shared/ErrorBoundary/ErrorBoundary.tsx"],"names":["React","ErrorBoundary","Component","hasError","getDerivedStateFromError","componentDidCatch","error","errorInfo","console","render","state","props","children"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,aAAN,SAA4BD,KAAK,CAACE,SAAlC,CAA4C;AAAA;AAAA;;AAAA,mCAClC;AACNC,MAAAA,QAAQ,EAAE;AADJ,KADkC;AAAA;;AAK1C,SAAOC,wBAAP,GAAkC;AAChC,WAAO;AAAED,MAAAA,QAAQ,EAAE;AAAZ,KAAP;AACD;;AAEDE,EAAAA,iBAAiB,CAACC,KAAD,EAAQC,SAAR,EAAmB;AAClCC,IAAAA,OAAO,CAACF,KAAR,CAAcA,KAAd,EAAqBC,SAArB;AACD;;AAEDE,EAAAA,MAAM,GAAG;AACP,QAAI,KAAKC,KAAL,CAAWP,QAAf,EAAyB;AACvB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;;AAED,WAAO,KAAKQ,KAAL,CAAWC,QAAlB;AACD;;AAnByC;;AAsB5C,eAAeX,aAAf","sourcesContent":["import React from \"react\";\n\nclass ErrorBoundary extends React.Component {\n  state = {\n    hasError: false,\n  };\n\n  static getDerivedStateFromError() {\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    console.error(error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <h1>Algo falló en la aplicación.</h1>;\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n"]},"metadata":{},"sourceType":"module"}