{"ast":null,"code":"//regex\nimport * as regex from '../../../../helpers/regex';\nexport const validations = [{\n  name: 'minLength',\n  text: 'At least 10 characters',\n  isValid: (name, watch) => {\n    let value = watch(name);\n    return regex.LENGTH_10.test(value);\n  }\n}, {\n  name: 'upperLower',\n  text: 'Upper and lowercase letters (a-z)',\n  isValid: (name, watch) => {\n    let value = watch(name);\n    return regex.UPPERCASE.test(watch(name)) && regex.LOWERCASE.test(value);\n  }\n}, {\n  name: 'oneSymbol',\n  text: 'At least 1 non-alphanumeric symbol (e.g. @-#/!_*)',\n  isValid: (name, watch) => {\n    return regex.SPECIAL_CHARS.test(watch(name));\n  }\n}, {\n  name: 'oneNumber',\n  text: 'At least 1 number (0-9)',\n  isValid: (name, watch) => {\n    return regex.NUMBERS.test(watch(name));\n  }\n}];","map":{"version":3,"sources":["/home/juanma/projects/membrane-front/src/legacy/components/Form/Field/Password/validations.js"],"names":["regex","validations","name","text","isValid","watch","value","LENGTH_10","test","UPPERCASE","LOWERCASE","SPECIAL_CHARS","NUMBERS"],"mappings":"AAAA;AACA,OAAO,KAAKA,KAAZ,MAAuB,2BAAvB;AAEA,OAAO,MAAMC,WAAW,GAAG,CACzB;AACEC,EAAAA,IAAI,EAAE,WADR;AAEEC,EAAAA,IAAI,EAAE,wBAFR;AAGEC,EAAAA,OAAO,EAAE,CAACF,IAAD,EAAOG,KAAP,KAAiB;AACxB,QAAIC,KAAK,GAAGD,KAAK,CAACH,IAAD,CAAjB;AACA,WAAOF,KAAK,CAACO,SAAN,CAAgBC,IAAhB,CAAqBF,KAArB,CAAP;AACD;AANH,CADyB,EASzB;AACEJ,EAAAA,IAAI,EAAE,YADR;AAEEC,EAAAA,IAAI,EAAE,mCAFR;AAGEC,EAAAA,OAAO,EAAE,CAACF,IAAD,EAAOG,KAAP,KAAiB;AACxB,QAAIC,KAAK,GAAGD,KAAK,CAACH,IAAD,CAAjB;AACA,WAAOF,KAAK,CAACS,SAAN,CAAgBD,IAAhB,CAAqBH,KAAK,CAACH,IAAD,CAA1B,KAAqCF,KAAK,CAACU,SAAN,CAAgBF,IAAhB,CAAqBF,KAArB,CAA5C;AACD;AANH,CATyB,EAiBzB;AACEJ,EAAAA,IAAI,EAAE,WADR;AAEEC,EAAAA,IAAI,EAAE,mDAFR;AAGEC,EAAAA,OAAO,EAAE,CAACF,IAAD,EAAOG,KAAP,KAAiB;AACxB,WAAOL,KAAK,CAACW,aAAN,CAAoBH,IAApB,CAAyBH,KAAK,CAACH,IAAD,CAA9B,CAAP;AACD;AALH,CAjByB,EAwBzB;AACEA,EAAAA,IAAI,EAAE,WADR;AAEEC,EAAAA,IAAI,EAAE,yBAFR;AAGEC,EAAAA,OAAO,EAAE,CAACF,IAAD,EAAOG,KAAP,KAAiB;AACxB,WAAOL,KAAK,CAACY,OAAN,CAAcJ,IAAd,CAAmBH,KAAK,CAACH,IAAD,CAAxB,CAAP;AACD;AALH,CAxByB,CAApB","sourcesContent":["//regex\nimport * as regex from '../../../../helpers/regex';\n\nexport const validations = [\n  {\n    name: 'minLength',\n    text: 'At least 10 characters',\n    isValid: (name, watch) => {\n      let value = watch(name);\n      return regex.LENGTH_10.test(value);\n    }\n  },\n  {\n    name: 'upperLower',\n    text: 'Upper and lowercase letters (a-z)',\n    isValid: (name, watch) => {\n      let value = watch(name);\n      return regex.UPPERCASE.test(watch(name)) && regex.LOWERCASE.test(value);\n    }\n  },\n  {\n    name: 'oneSymbol',\n    text: 'At least 1 non-alphanumeric symbol (e.g. @-#/!_*)',\n    isValid: (name, watch) => {\n      return regex.SPECIAL_CHARS.test(watch(name));\n    }\n  },\n  {\n    name: 'oneNumber',\n    text: 'At least 1 number (0-9)',\n    isValid: (name, watch) => {\n      return regex.NUMBERS.test(watch(name));\n    }\n  }\n];\n"]},"metadata":{},"sourceType":"module"}