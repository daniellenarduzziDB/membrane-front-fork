{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/juanma/projects/membrane-front/src/legacy/components/PrivateRoute.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { Redirect, Route } from 'react-router'; //services\n\nimport { isLoggedIn } from '../services/auth'; //hooks\n\nimport useUser from '../hooks/useUser';\n\nconst PrivateRoute = props => {\n  const {\n    twoFactorAuth\n  } = useUser();\n  const {\n    path,\n    component: Component\n  } = props;\n\n  if (path === '/two-factor') {\n    if (twoFactorAuth && !isLoggedIn()) {\n      return /*#__PURE__*/_jsxDEV(Route, {\n        render: props => /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, props), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: {\n          pathname: '/'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 14\n      }, this);\n    }\n  } else {\n    return /*#__PURE__*/_jsxDEV(Route, {\n      render: props => isLoggedIn() ? /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, props), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n        to: {\n          pathname: '/sign-in'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this);\n  }\n};\n\nexport default PrivateRoute;","map":{"version":3,"sources":["/home/juanma/projects/membrane-front/src/legacy/components/PrivateRoute.js"],"names":["React","Redirect","Route","isLoggedIn","useUser","PrivateRoute","props","twoFactorAuth","path","component","Component","pathname"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,cAAhC,C,CAEA;;AACA,SAASC,UAAT,QAA2B,kBAA3B,C,CAEA;;AACA,OAAOC,OAAP,MAAoB,kBAApB;;AAEA,MAAMC,YAAY,GAAGC,KAAK,IAAI;AAC5B,QAAM;AAAEC,IAAAA;AAAF,MAAoBH,OAAO,EAAjC;AACA,QAAM;AAAEI,IAAAA,IAAF;AAAQC,IAAAA,SAAS,EAAEC;AAAnB,MAAiCJ,KAAvC;;AAEA,MAAIE,IAAI,KAAK,aAAb,EAA4B;AAC1B,QAAID,aAAa,IAAI,CAACJ,UAAU,EAAhC,EAAoC;AAClC,0BAAO,QAAC,KAAD;AAAO,QAAA,MAAM,EAAEG,KAAK,iBAAI,QAAC,SAAD,oBAAeA,KAAf;AAAA;AAAA;AAAA;AAAA;AAAxB;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFD,MAEO;AACL,0BAAO,QAAC,QAAD;AAAU,QAAA,EAAE,EAAE;AAAEK,UAAAA,QAAQ,EAAE;AAAZ;AAAd;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;AACF,GAND,MAMO;AACL,wBACE,QAAC,KAAD;AACE,MAAA,MAAM,EAAEL,KAAK,IACXH,UAAU,kBACR,QAAC,SAAD,oBAAeG,KAAf;AAAA;AAAA;AAAA;AAAA,cADQ,gBAGR,QAAC,QAAD;AAAU,QAAA,EAAE,EAAE;AAAEK,UAAAA,QAAQ,EAAE;AAAZ;AAAd;AAAA;AAAA;AAAA;AAAA;AALN;AAAA;AAAA;AAAA;AAAA,YADF;AAWD;AACF,CAvBD;;AAyBA,eAAeN,YAAf","sourcesContent":["import React from 'react';\nimport { Redirect, Route } from 'react-router';\n\n//services\nimport { isLoggedIn } from '../services/auth';\n\n//hooks\nimport useUser from '../hooks/useUser';\n\nconst PrivateRoute = props => {\n  const { twoFactorAuth } = useUser();\n  const { path, component: Component } = props;\n\n  if (path === '/two-factor') {\n    if (twoFactorAuth && !isLoggedIn()) {\n      return <Route render={props => <Component {...props} />} />;\n    } else {\n      return <Redirect to={{ pathname: '/' }} />;\n    }\n  } else {\n    return (\n      <Route\n        render={props =>\n          isLoggedIn() ? (\n            <Component {...props} />\n          ) : (\n            <Redirect to={{ pathname: '/sign-in' }} />\n          )\n        }\n      />\n    );\n  }\n};\n\nexport default PrivateRoute;\n"]},"metadata":{},"sourceType":"module"}