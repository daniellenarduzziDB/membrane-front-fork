{"ast":null,"code":"import _defineProperty from \"/home/juanma/projects/membrane-front/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/juanma/projects/membrane-front/src/legacy/components/Form/Field/DropDown/index.js\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { memo, useState, useRef } from 'react';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\nimport shortid from 'shortid'; //styles\n\nimport * as styles from './styles.module.scss';\nimport * as fieldStyles from '../styles.module.scss'; //components\n\nimport FontAwesomeIcon, { faChevronDown } from '../../../FontAwesomeIcon'; //hook\n\nimport useOutsideClick from '../../../../hooks/useOutsideClick';\n\nfunction DropDown(_ref) {\n  _s();\n\n  var _this = this;\n\n  var classes = _ref.classes,\n      name = _ref.name,\n      placeholder = _ref.placeholder,\n      items = _ref.items,\n      labelKey = _ref.labelKey,\n      valueKey = _ref.valueKey,\n      displayKey = _ref.displayKey,\n      validation = _ref.validation,\n      register = _ref.register,\n      setValue = _ref.setValue,\n      onOptionChanged = _ref.onOptionChanged;\n  //bind styles\n  classnames.bind(styles);\n  classnames.bind(fieldStyles); //reference\n\n  var refDropDown = useRef(); //states\n\n  var _useState = useState(false),\n      displayList = _useState[0],\n      setDisplayList = _useState[1];\n\n  var _useState2 = useState(''),\n      valueSelected = _useState2[0],\n      setValueSelected = _useState2[1]; //outside click hook\n\n\n  useOutsideClick(refDropDown, function () {\n    return setDisplayList(false);\n  });\n\n  var handleDropdown = function handleDropdown() {\n    setDisplayList(!displayList);\n  };\n\n  var handleItemClick = function handleItemClick(item) {\n    var value = displayKey ? item[displayKey] : item[labelKey];\n    setValue(name, value, {\n      shouldValidate: true\n    });\n    setValueSelected(value);\n    if (onOptionChanged) onOptionChanged(item[valueKey]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: refDropDown,\n    className: classnames(styles.dropDown, classes),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", _objectSpread(_objectSpread({\n      className: classnames(fieldStyles.fieldInput)\n    }, register(name, validation)), {}, {\n      onClick: handleDropdown,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: name,\n        type: \"text\",\n        placeholder: placeholder,\n        disabled: true,\n        value: valueSelected\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faChevronDown\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }), void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: classnames(styles.dropDownList, displayList ? styles['dropDownList--displayed'] : ''),\n      children: items.map(function (item) {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: function onClick() {\n            return handleItemClick(item);\n          },\n          children: item[labelKey]\n        }, shortid.generate(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n} //#region props definitions\n// default values and types\n\n\n_s(DropDown, \"oJ0ycMMo1QES5IzuHp7GI6VQ4CY=\", false, function () {\n  return [useOutsideClick];\n});\n\n_c = DropDown;\nDropDown.defaultProps = {\n  items: [],\n  classes: '',\n  placeholder: '',\n  labelKey: '',\n  valueKey: '',\n  displayKey: '',\n  onOptionChanged: undefined\n};\nDropDown.propTypes = {\n  items: PropTypes.array,\n  classes: PropTypes.any,\n  placeholder: PropTypes.string,\n  labelKey: PropTypes.string,\n  valueKey: PropTypes.string,\n  displayKey: PropTypes.string,\n  onOptionChanged: PropTypes.func\n}; //#endregion\n\nexport default _c2 = /*#__PURE__*/memo(DropDown);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"DropDown\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/juanma/projects/membrane-front/src/legacy/components/Form/Field/DropDown/index.js"],"names":["memo","useState","useRef","classnames","PropTypes","shortid","styles","fieldStyles","FontAwesomeIcon","faChevronDown","useOutsideClick","DropDown","classes","name","placeholder","items","labelKey","valueKey","displayKey","validation","register","setValue","onOptionChanged","bind","refDropDown","displayList","setDisplayList","valueSelected","setValueSelected","handleDropdown","handleItemClick","item","value","shouldValidate","dropDown","fieldInput","dropDownList","map","generate","defaultProps","undefined","propTypes","array","any","string","func"],"mappings":"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","sourcesContent":["import { memo, useState, useRef } from 'react';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\nimport shortid from 'shortid';\n\n//styles\nimport * as styles from './styles.module.scss';\nimport * as fieldStyles from '../styles.module.scss';\n\n//components\nimport FontAwesomeIcon, { faChevronDown } from '../../../FontAwesomeIcon';\n\n//hook\nimport useOutsideClick from '../../../../hooks/useOutsideClick';\n\nfunction DropDown({\n  classes,\n  name,\n  placeholder,\n  items,\n  labelKey,\n  valueKey,\n  displayKey,\n  validation,\n  register,\n  setValue,\n  onOptionChanged\n}) {\n  //bind styles\n  classnames.bind(styles);\n  classnames.bind(fieldStyles);\n\n  //reference\n  const refDropDown = useRef();\n\n  //states\n  const [displayList, setDisplayList] = useState(false);\n  const [valueSelected, setValueSelected] = useState('');\n\n  //outside click hook\n  useOutsideClick(refDropDown, () => setDisplayList(false));\n\n  const handleDropdown = () => {\n    setDisplayList(!displayList);\n  };\n\n  const handleItemClick = item => {\n    let value = displayKey ? item[displayKey] : item[labelKey];\n\n    setValue(name, value, { shouldValidate: true });\n    setValueSelected(value);\n    if (onOptionChanged) onOptionChanged(item[valueKey]);\n  };\n\n  return (\n    <div ref={refDropDown} className={classnames(styles.dropDown, classes)}>\n      <div\n        className={classnames(fieldStyles.fieldInput)}\n        {...register(name, validation)}\n        onClick={handleDropdown}>\n        <input\n          name={name}\n          type=\"text\"\n          placeholder={placeholder}\n          disabled={true}\n          value={valueSelected}\n        />\n        <FontAwesomeIcon icon={faChevronDown} />\n      </div>\n      <ul\n        className={classnames(\n          styles.dropDownList,\n          displayList ? styles['dropDownList--displayed'] : ''\n        )}>\n        {items.map(item => (\n          <li key={shortid.generate()} onClick={() => handleItemClick(item)}>\n            {item[labelKey]}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\n//#region props definitions\n// default values and types\nDropDown.defaultProps = {\n  items: [],\n  classes: '',\n  placeholder: '',\n  labelKey: '',\n  valueKey: '',\n  displayKey: '',\n  onOptionChanged: undefined\n};\n\nDropDown.propTypes = {\n  items: PropTypes.array,\n  classes: PropTypes.any,\n  placeholder: PropTypes.string,\n  labelKey: PropTypes.string,\n  valueKey: PropTypes.string,\n  displayKey: PropTypes.string,\n  onOptionChanged: PropTypes.func\n};\n//#endregion\n\nexport default memo(DropDown);\n"]},"metadata":{},"sourceType":"module"}