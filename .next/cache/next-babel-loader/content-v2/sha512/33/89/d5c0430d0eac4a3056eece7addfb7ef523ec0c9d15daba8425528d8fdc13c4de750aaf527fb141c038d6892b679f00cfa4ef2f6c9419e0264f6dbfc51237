{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/juanma/projects/membrane-front/src/legacy/views/SignIn/index.js\",\n    _s = $RefreshSig$();\n\nimport { memo, useState } from 'react';\nimport { Animate } from 'react-simple-animate';\nimport classnames from 'classnames'; //styles\n\nimport * as styles from './styles.module.scss'; //hooks\n\nimport useUser from '../../hooks/useUser'; //components\n\nimport Form from '../../components/Form';\nimport Splash from '../../components/Splash'; //regex validation\n\nimport * as regex from '../../helpers/regex';\nexport default _c2 = /*#__PURE__*/memo(_c = _s(function SignIn(props) {\n  _s();\n\n  //hook user\n  var _useUser = useUser(),\n      signIn = _useUser.signIn; //states\n\n\n  var _useState = useState(''),\n      customError = _useState[0],\n      setCustomError = _useState[1]; //bind styles\n\n\n  classnames.bind(styles);\n\n  var onSubmit = function onSubmit(data) {\n    signIn(data).then(function () {\n      props.history.push('/two-factor');\n    })[\"catch\"](function (error) {\n      setCustomError({\n        field: 'email',\n        type: 'custom',\n        message: error.message\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Splash, {\n    children: /*#__PURE__*/_jsxDEV(Animate, {\n      play: true,\n      duration: 0.25,\n      start: {\n        opacity: 0\n      },\n      end: {\n        opacity: 1\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.signInContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.signInForm,\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            customError: customError,\n            items: [{\n              label: 'Email',\n              name: 'email',\n              placeholder: 'Enter your email',\n              type: 'text',\n              validation: {\n                required: 'This field is required',\n                pattern: {\n                  value: regex.EMAIL,\n                  message: 'Invalid email format'\n                }\n              }\n            }, {\n              label: 'Password',\n              name: 'password',\n              placeholder: 'Enter your password',\n              type: 'password',\n              validation: {\n                required: 'This field is required'\n              }\n            }],\n            actions: [{\n              type: 'primary',\n              useSubmitBehavior: true,\n              label: 'Next',\n              onClick: onSubmit\n            }, {\n              type: 'tertiary',\n              label: 'Sign Up',\n              linkTo: '/sign-up'\n            }, {\n              type: 'tertiary',\n              label: 'Forgot Password',\n              linkTo: '/forgot-password'\n            }]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}, \"SaQTJUkLTDxWYNBbD81lrO+AHM0=\", false, function () {\n  return [useUser];\n}));\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"%default%$memo\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/juanma/projects/membrane-front/src/legacy/views/SignIn/index.js"],"names":["memo","useState","Animate","classnames","styles","useUser","Form","Splash","regex","SignIn","props","signIn","customError","setCustomError","bind","onSubmit","data","then","history","push","error","field","type","message","opacity","signInContainer","signInForm","label","name","placeholder","validation","required","pattern","value","EMAIL","useSubmitBehavior","onClick","linkTo"],"mappings":"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","sourcesContent":["import { memo, useState } from 'react';\nimport { Animate } from 'react-simple-animate';\nimport classnames from 'classnames';\n\n//styles\nimport * as styles from './styles.module.scss';\n\n//hooks\nimport useUser from '../../hooks/useUser';\n\n//components\nimport Form from '../../components/Form';\nimport Splash from '../../components/Splash';\n\n//regex validation\nimport * as regex from '../../helpers/regex';\n\nexport default memo(function SignIn(props) {\n  //hook user\n  const { signIn } = useUser();\n\n  //states\n  const [customError, setCustomError] = useState('');\n\n  //bind styles\n  classnames.bind(styles);\n\n  const onSubmit = data => {\n    signIn(data)\n      .then(() => {\n        props.history.push('/two-factor');\n      })\n      .catch(error => {\n        setCustomError({\n          field: 'email',\n          type: 'custom',\n          message: error.message\n        });\n      });\n  };\n\n  return (\n    <Splash>\n      <Animate\n        play={true}\n        duration={0.25}\n        start={{ opacity: 0 }}\n        end={{ opacity: 1 }}>\n        <div className={styles.signInContainer}>\n          <h2>Sign In</h2>\n          <div className={styles.signInForm}>\n            <Form\n              customError={customError}\n              items={[\n                {\n                  label: 'Email',\n                  name: 'email',\n                  placeholder: 'Enter your email',\n                  type: 'text',\n                  validation: {\n                    required: 'This field is required',\n                    pattern: {\n                      value: regex.EMAIL,\n                      message: 'Invalid email format'\n                    }\n                  }\n                },\n                {\n                  label: 'Password',\n                  name: 'password',\n                  placeholder: 'Enter your password',\n                  type: 'password',\n                  validation: {\n                    required: 'This field is required'\n                  }\n                }\n              ]}\n              actions={[\n                {\n                  type: 'primary',\n                  useSubmitBehavior: true,\n                  label: 'Next',\n                  onClick: onSubmit\n                },\n                {\n                  type: 'tertiary',\n                  label: 'Sign Up',\n                  linkTo: '/sign-up'\n                },\n                {\n                  type: 'tertiary',\n                  label: 'Forgot Password',\n                  linkTo: '/forgot-password'\n                }\n              ]}\n            />\n          </div>\n        </div>\n      </Animate>\n    </Splash>\n  );\n});\n"]},"metadata":{},"sourceType":"module"}